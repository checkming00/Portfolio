<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20204.21.0315.1000                               -->
<workbook original-version='18.1' source-build='2020.4.3 (20204.21.0315.1000)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='death_vaccine_cleaned' inline='true' name='federated.17m32r803m4zkr173wuii171p0d6' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='death_vaccine_cleaned' name='textscan.1u6sidq01dvl8g14blj7119h5wpa'>
            <connection class='textscan' directory='C:/private/Langold/Langold/Data Analytics Course/github_portfolio/Covid' filename='death_vaccine_cleaned.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1u6sidq01dvl8g14blj7119h5wpa' name='death_vaccine_cleaned.csv' table='[death_vaccine_cleaned#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='string' name='continent' ordinal='0' />
            <column datatype='string' name='location' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='real' name='population' ordinal='3' />
            <column datatype='real' name='total_cases' ordinal='4' />
            <column datatype='real' name='total_deaths' ordinal='5' />
            <column datatype='real' name='people_vaccinated' ordinal='6' />
            <column datatype='real' name='people_fully_vaccinated' ordinal='7' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1u6sidq01dvl8g14blj7119h5wpa' name='death_vaccine_cleaned.csv' table='[death_vaccine_cleaned#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='string' name='continent' ordinal='0' />
            <column datatype='string' name='location' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='real' name='population' ordinal='3' />
            <column datatype='real' name='total_cases' ordinal='4' />
            <column datatype='real' name='total_deaths' ordinal='5' />
            <column datatype='real' name='people_vaccinated' ordinal='6' />
            <column datatype='real' name='people_fully_vaccinated' ordinal='7' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[death_vaccine_cleaned.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[death_vaccine_cleaned.csv]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[death_vaccine_cleaned.csv_513D1F406F6B44C591D9B605F7639DBB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[death_vaccine_cleaned.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[death_vaccine_cleaned.csv_513D1F406F6B44C591D9B605F7639DBB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[death_vaccine_cleaned.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[death_vaccine_cleaned.csv_513D1F406F6B44C591D9B605F7639DBB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[death_vaccine_cleaned.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[death_vaccine_cleaned.csv_513D1F406F6B44C591D9B605F7639DBB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[death_vaccine_cleaned.csv]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[death_vaccine_cleaned.csv_513D1F406F6B44C591D9B605F7639DBB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[death_vaccine_cleaned.csv]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[death_vaccine_cleaned.csv_513D1F406F6B44C591D9B605F7639DBB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_vaccinated</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_vaccinated]</local-name>
            <parent-name>[death_vaccine_cleaned.csv]</parent-name>
            <remote-alias>people_vaccinated</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[death_vaccine_cleaned.csv_513D1F406F6B44C591D9B605F7639DBB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_fully_vaccinated</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_fully_vaccinated]</local-name>
            <parent-name>[death_vaccine_cleaned.csv]</parent-name>
            <remote-alias>people_fully_vaccinated</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[death_vaccine_cleaned.csv_513D1F406F6B44C591D9B605F7639DBB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.17m32r803m4zkr173wuii171p0d6].[avg:Calculation_1204431484942958592:qk]&quot;' value='Infected_Rate' />
          <alias key='&quot;[federated.17m32r803m4zkr173wuii171p0d6].[avg:Calculation_1204431484943327233:qk]&quot;' value='Death_Rate' />
          <alias key='&quot;[federated.17m32r803m4zkr173wuii171p0d6].[avg:Calculation_1204431484943650818:qk]&quot;' value='Vaccinated_Rate' />
        </aliases>
      </column>
      <column caption='Infected_Rate' datatype='real' default-format='n#,##0.00&quot;%&quot;;-#,##0.00&quot;%&quot;' name='[Calculation_1204431484942958592]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[total_cases]/[population]*100' />
      </column>
      <column caption='Death_Rate' datatype='real' default-format='n#,##0.00&quot;%&quot;;-#,##0.00&quot;%&quot;' name='[Calculation_1204431484943327233]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [total_cases]=0 THEN 0&#13;&#10;ELSE [total_deaths]/[total_cases]*100&#13;&#10;END' />
      </column>
      <column caption='Vaccinated_Rate' datatype='real' default-format='p0.00%' name='[Calculation_1204431484943650818]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[people_vaccinated]/[population]' />
      </column>
      <column caption='Fully_Vaccinated_Rate' datatype='real' default-format='p0.00%' name='[Calculation_1204431484943790083]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[people_fully_vaccinated]/[population]' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='death_vaccine_cleaned.csv' datatype='table' name='[__tableau_internal_object_id__].[death_vaccine_cleaned.csv_513D1F406F6B44C591D9B605F7639DBB]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;Micronesia (country)&quot;' value='&quot;Federated States of Micronesia&quot;' />
          <semantic-value key='&quot;Timor&quot;' value='&quot;Timor Leste&quot;' />
          <semantic-value key='&quot;Vatican&quot;' value='&quot;Vatican City&quot;' />
        </semantic-values>
      </column>
      <column caption='People Fully Vaccinated' datatype='real' name='[people_fully_vaccinated]' role='measure' type='quantitative' />
      <column caption='People Vaccinated' datatype='real' name='[people_vaccinated]' role='measure' type='quantitative' />
      <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='real' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_1204431484942958592]' derivation='Avg' name='[avg:Calculation_1204431484942958592:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1204431484943327233]' derivation='Avg' name='[avg:Calculation_1204431484943327233:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1204431484943650818]' derivation='Avg' name='[avg:Calculation_1204431484943650818:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1204431484942958592]' derivation='Sum' name='[sum:Calculation_1204431484942958592:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1204431484943327233]' derivation='Sum' name='[sum:Calculation_1204431484943327233:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1204431484943650818]' derivation='Sum' name='[sum:Calculation_1204431484943650818:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1204431484943790083]' derivation='Sum' name='[sum:Calculation_1204431484943790083:qk]' pivot='key' type='quantitative' />
      <column-instance column='[people_fully_vaccinated]' derivation='Sum' name='[sum:people_fully_vaccinated:qk]' pivot='key' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/benja/OneDrive/Documents/My Tableau Repository/Datasources/death_vaccine_cleaned.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='07/01/2021 09:09:32 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='death_vaccine_cleaned' increment-value='%null%' refresh-type='create' rows-inserted='94262' timestamp-start='2021-07-01 21:09:32.169' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>continent</remote-name>
              <remote-type>129</remote-type>
              <local-name>[continent]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>continent</remote-alias>
              <ordinal>0</ordinal>
              <family>death_vaccine_cleaned.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[death_vaccine_cleaned.csv_513D1F406F6B44C591D9B605F7639DBB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>1</ordinal>
              <family>death_vaccine_cleaned.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>334</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[death_vaccine_cleaned.csv_513D1F406F6B44C591D9B605F7639DBB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>2</ordinal>
              <family>death_vaccine_cleaned.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1500</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[death_vaccine_cleaned.csv_513D1F406F6B44C591D9B605F7639DBB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>5</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>3</ordinal>
              <family>death_vaccine_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>334</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[death_vaccine_cleaned.csv_513D1F406F6B44C591D9B605F7639DBB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_cases</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_cases</remote-alias>
              <ordinal>4</ordinal>
              <family>death_vaccine_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>21426</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[death_vaccine_cleaned.csv_513D1F406F6B44C591D9B605F7639DBB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_deaths</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_deaths</remote-alias>
              <ordinal>5</ordinal>
              <family>death_vaccine_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7059</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[death_vaccine_cleaned.csv_513D1F406F6B44C591D9B605F7639DBB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>people_vaccinated</remote-name>
              <remote-type>5</remote-type>
              <local-name>[people_vaccinated]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>people_vaccinated</remote-alias>
              <ordinal>6</ordinal>
              <family>death_vaccine_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9674</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[death_vaccine_cleaned.csv_513D1F406F6B44C591D9B605F7639DBB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>people_fully_vaccinated</remote-name>
              <remote-type>5</remote-type>
              <local-name>[people_fully_vaccinated]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>people_fully_vaccinated</remote-alias>
              <ordinal>7</ordinal>
              <family>death_vaccine_cleaned.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7179</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[death_vaccine_cleaned.csv_513D1F406F6B44C591D9B605F7639DBB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.17m32r803m4zkr173wuii171p0d6].[sum:Calculation_1204431484943327233:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.17m32r803m4zkr173wuii171p0d6].[avg:Calculation_1204431484943650818:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.17m32r803m4zkr173wuii171p0d6].[sum:Calculation_1204431484943650818:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.17m32r803m4zkr173wuii171p0d6]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.17m32r803m4zkr173wuii171p0d6].[avg:Calculation_1204431484943327233:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.17m32r803m4zkr173wuii171p0d6].[avg:Calculation_1204431484942958592:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.17m32r803m4zkr173wuii171p0d6].[sum:Calculation_1204431484942958592:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.17m32r803m4zkr173wuii171p0d6].[sum:people_fully_vaccinated:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.17m32r803m4zkr173wuii171p0d6].[sum:Calculation_1204431484943790083:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='death_vaccine_cleaned.csv' id='death_vaccine_cleaned.csv_513D1F406F6B44C591D9B605F7639DBB'>
            <properties context=''>
              <relation connection='textscan.1u6sidq01dvl8g14blj7119h5wpa' name='death_vaccine_cleaned.csv' table='[death_vaccine_cleaned#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='string' name='continent' ordinal='0' />
                  <column datatype='string' name='location' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='real' name='population' ordinal='3' />
                  <column datatype='real' name='total_cases' ordinal='4' />
                  <column datatype='real' name='total_deaths' ordinal='5' />
                  <column datatype='real' name='people_vaccinated' ordinal='6' />
                  <column datatype='real' name='people_fully_vaccinated' ordinal='7' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Deaths_by_continent' inline='true' name='federated.1tabam71o31b7f12li4d908ejg2u' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='LAPTOP-CJEJNE92\SQLEXPRESS' name='sqlserver.021jj3y1lwrmrg13ouora0ak358x'>
            <connection authentication='sspi' class='sqlserver' dbname='PortfolioProject' odbc-native-protocol='yes' one-time-sql='' server='LAPTOP-CJEJNE92\SQLEXPRESS' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='sqlserver.021jj3y1lwrmrg13ouora0ak358x' name='deaths_by_continent' table='[dbo].[deaths_by_continent]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='sqlserver.021jj3y1lwrmrg13ouora0ak358x' name='deaths_by_continent' table='[dbo].[deaths_by_continent]' type='table' />
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[deaths_by_continent]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deaths_by_continent_A4C18C9C9F684DC19DDAE84A5611312E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Deaths]</local-name>
            <parent-name>[deaths_by_continent]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deaths_by_continent_A4C18C9C9F684DC19DDAE84A5611312E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='deaths_by_continent' datatype='table' name='[__tableau_internal_object_id__].[deaths_by_continent_A4C18C9C9F684DC19DDAE84A5611312E]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/benja/OneDrive/Documents/My Tableau Repository/Datasources/Deaths_by_continent.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='07/01/2021 09:09:46 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='Deaths_by_continent' increment-value='%null%' refresh-type='create' rows-inserted='7' timestamp-start='2021-07-01 21:09:46.387' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>deaths_by_continent</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deaths_by_continent_A4C18C9C9F684DC19DDAE84A5611312E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Deaths</remote-alias>
              <ordinal>1</ordinal>
              <family>deaths_by_continent</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deaths_by_continent_A4C18C9C9F684DC19DDAE84A5611312E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='deaths_by_continent' id='deaths_by_continent_A4C18C9C9F684DC19DDAE84A5611312E'>
            <properties context=''>
              <relation connection='sqlserver.021jj3y1lwrmrg13ouora0ak358x' name='deaths_by_continent' table='[dbo].[deaths_by_continent]' type='table' />
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='global_number' inline='true' name='federated.1ctpbeb1exvkc51bunlym0d64lmp' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='LAPTOP-CJEJNE92\SQLEXPRESS' name='sqlserver.1kv85sx0iu2nfs117gcqg1klqhgb'>
            <connection authentication='sspi' class='sqlserver' dbname='PortfolioProject' odbc-native-protocol='yes' one-time-sql='' server='LAPTOP-CJEJNE92\SQLEXPRESS' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='sqlserver.1kv85sx0iu2nfs117gcqg1klqhgb' name='global_number' table='[dbo].[global_number]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='sqlserver.1kv85sx0iu2nfs117gcqg1klqhgb' name='global_number' table='[dbo].[global_number]' type='table' />
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>World_Cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[World_Cases]</local-name>
            <parent-name>[global_number]</parent-name>
            <remote-alias>World_Cases</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[global_number_C8EA47FFFB774C64947E77BF5A19B86B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>World_Deaths</remote-name>
            <remote-type>3</remote-type>
            <local-name>[World_Deaths]</local-name>
            <parent-name>[global_number]</parent-name>
            <remote-alias>World_Deaths</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[global_number_C8EA47FFFB774C64947E77BF5A19B86B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death_Rate' datatype='real' default-format='p0.00%' name='[Calculation_1534038682388238336]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[World_Deaths]/[World_Cases]' />
      </column>
      <column caption='World Cases' datatype='real' name='[World_Cases]' role='measure' type='quantitative' />
      <column caption='World Deaths' datatype='integer' name='[World_Deaths]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='global_number' datatype='table' name='[__tableau_internal_object_id__].[global_number_C8EA47FFFB774C64947E77BF5A19B86B]' role='measure' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/benja/OneDrive/Documents/My Tableau Repository/Datasources/global_number.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='07/01/2021 09:09:57 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='global_number' increment-value='%null%' refresh-type='create' rows-inserted='1' timestamp-start='2021-07-01 21:09:56.951' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>World_Cases</remote-name>
              <remote-type>5</remote-type>
              <local-name>[World_Cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>World_Cases</remote-alias>
              <ordinal>0</ordinal>
              <family>global_number</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[global_number_C8EA47FFFB774C64947E77BF5A19B86B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>World_Deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[World_Deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>World_Deaths</remote-alias>
              <ordinal>1</ordinal>
              <family>global_number</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[global_number_C8EA47FFFB774C64947E77BF5A19B86B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='1' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='global_number' id='global_number_C8EA47FFFB774C64947E77BF5A19B86B'>
            <properties context=''>
              <relation connection='sqlserver.1kv85sx0iu2nfs117gcqg1klqhgb' name='global_number' table='[dbo].[global_number]' type='table' />
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='infect_rate_by_date' inline='true' name='federated.1nhmxuw03poqcp15qqw8n04myy9i' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='LAPTOP-CJEJNE92\SQLEXPRESS' name='sqlserver.0d6rrbd0epyjrq1dhpdy41i8m30y'>
            <connection authentication='sspi' class='sqlserver' dbname='PortfolioProject' odbc-native-protocol='yes' one-time-sql='' server='LAPTOP-CJEJNE92\SQLEXPRESS' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='sqlserver.0d6rrbd0epyjrq1dhpdy41i8m30y' name='infect_rate_by_date' table='[dbo].[infect_rate_by_date]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='sqlserver.0d6rrbd0epyjrq1dhpdy41i8m30y' name='infect_rate_by_date' table='[dbo].[infect_rate_by_date]' type='table' />
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[infect_rate_by_date]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infect_rate_by_date_41DA7EE3D807463784FF5E831715ABDF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[infect_rate_by_date]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infect_rate_by_date_41DA7EE3D807463784FF5E831715ABDF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Infect_Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Infect_Rate]</local-name>
            <parent-name>[infect_rate_by_date]</parent-name>
            <remote-alias>Infect_Rate</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infect_rate_by_date_41DA7EE3D807463784FF5E831715ABDF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Infect Rate' datatype='real' name='[Infect_Rate]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='infect_rate_by_date' datatype='table' name='[__tableau_internal_object_id__].[infect_rate_by_date_41DA7EE3D807463784FF5E831715ABDF]' role='measure' type='quantitative' />
      <column caption='Date' datatype='datetime' name='[date]' role='dimension' type='ordinal' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/benja/OneDrive/Documents/My Tableau Repository/Datasources/infect_rate_by_date.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='07/01/2021 09:10:06 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='infect_rate_by_date' increment-value='%null%' refresh-type='create' rows-inserted='2595' timestamp-start='2021-07-01 21:10:06.549' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>infect_rate_by_date</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infect_rate_by_date_41DA7EE3D807463784FF5E831715ABDF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>135</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>1</ordinal>
              <family>infect_rate_by_date</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>564</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infect_rate_by_date_41DA7EE3D807463784FF5E831715ABDF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Infect_Rate</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Infect_Rate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Infect_Rate</remote-alias>
              <ordinal>2</ordinal>
              <family>infect_rate_by_date</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1916</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infect_rate_by_date_41DA7EE3D807463784FF5E831715ABDF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]&#10;[none:Forecast Indicator:nk]' palette='red_gold_10_0' type='palette'>
            <map to='#b71d3e'>
              <multibucket>
                <bucket>&quot;United States&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#c53241'>
              <multibucket>
                <bucket>&quot;United States&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d14544'>
              <multibucket>
                <bucket>&quot;United Kingdom&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#de5747'>
              <multibucket>
                <bucket>&quot;United Kingdom&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e96949'>
              <multibucket>
                <bucket>&quot;India&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f27b4a'>
              <multibucket>
                <bucket>&quot;India&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f4d166'>
              <multibucket>
                <bucket>&quot;Australia&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f6bb58'>
              <multibucket>
                <bucket>&quot;Australia&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f9a550'>
              <multibucket>
                <bucket>&quot;Canada&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fa8f4d'>
              <multibucket>
                <bucket>&quot;Canada&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='infect_rate_by_date' id='infect_rate_by_date_41DA7EE3D807463784FF5E831715ABDF'>
            <properties context=''>
              <relation connection='sqlserver.0d6rrbd0epyjrq1dhpdy41i8m30y' name='infect_rate_by_date' table='[dbo].[infect_rate_by_date]' type='table' />
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='infect_rate_death_rate_by_country' inline='true' name='federated.162eqd91v9yni510ey24c1rg1nrk' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='LAPTOP-CJEJNE92\SQLEXPRESS' name='sqlserver.1muxlh81gl10ym1esr8w91jmmh5j'>
            <connection authentication='sspi' class='sqlserver' dbname='PortfolioProject' odbc-native-protocol='yes' one-time-sql='' server='LAPTOP-CJEJNE92\SQLEXPRESS' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='sqlserver.1muxlh81gl10ym1esr8w91jmmh5j' name='infect_rate_death_rate_by_country' table='[dbo].[infect_rate_death_rate_by_country]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='sqlserver.1muxlh81gl10ym1esr8w91jmmh5j' name='infect_rate_death_rate_by_country' table='[dbo].[infect_rate_death_rate_by_country]' type='table' />
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[infect_rate_death_rate_by_country]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infect_rate_death_rate_by_country_1ECA1D472C6C44A6B04BD0B51FCBF147]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Infection_Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Infection_Rate]</local-name>
            <parent-name>[infect_rate_death_rate_by_country]</parent-name>
            <remote-alias>Infection_Rate</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infect_rate_death_rate_by_country_1ECA1D472C6C44A6B04BD0B51FCBF147]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Death_Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Death_Rate]</local-name>
            <parent-name>[infect_rate_death_rate_by_country]</parent-name>
            <remote-alias>Death_Rate</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infect_rate_death_rate_by_country_1ECA1D472C6C44A6B04BD0B51FCBF147]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Rate' datatype='real' default-format='p0.00%' name='[Death_Rate]' role='measure' type='quantitative' />
      <column caption='Infection Rate' datatype='real' default-format='p0.00%' name='[Infection_Rate]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='infect_rate_death_rate_by_country' datatype='table' name='[__tableau_internal_object_id__].[infect_rate_death_rate_by_country_1ECA1D472C6C44A6B04BD0B51FCBF147]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;Timor&quot;' value='&quot;Timor Leste&quot;' />
        </semantic-values>
      </column>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/benja/OneDrive/Documents/My Tableau Repository/Datasources/infect_rate_death_rate_by_country.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='07/01/2021 09:10:16 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='infect_rate_death_rate_by_country' increment-value='%null%' refresh-type='create' rows-inserted='840' timestamp-start='2021-07-01 21:10:16.816' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>infect_rate_death_rate_by_country</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>181</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infect_rate_death_rate_by_country_1ECA1D472C6C44A6B04BD0B51FCBF147]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Infection_Rate</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Infection_Rate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Infection_Rate</remote-alias>
              <ordinal>1</ordinal>
              <family>infect_rate_death_rate_by_country</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>181</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infect_rate_death_rate_by_country_1ECA1D472C6C44A6B04BD0B51FCBF147]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Death_Rate</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Death_Rate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Death_Rate</remote-alias>
              <ordinal>2</ordinal>
              <family>infect_rate_death_rate_by_country</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>181</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[infect_rate_death_rate_by_country_1ECA1D472C6C44A6B04BD0B51FCBF147]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='infect_rate_death_rate_by_country' id='infect_rate_death_rate_by_country_1ECA1D472C6C44A6B04BD0B51FCBF147'>
            <properties context=''>
              <relation connection='sqlserver.1muxlh81gl10ym1esr8w91jmmh5j' name='infect_rate_death_rate_by_country' table='[dbo].[infect_rate_death_rate_by_country]' type='table' />
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='last_date' inline='true' name='federated.07vnj5m128xjj41h1oyvt0lo602f' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='last_date' name='textscan.1efy99u1r6cvwk16fke381glrm9n'>
            <connection class='textscan' directory='C:/private/Langold/Langold/Data Analytics Course/github_portfolio/Covid' filename='last_date.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1efy99u1r6cvwk16fke381glrm9n' name='last_date.csv' table='[last_date#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='real' name='population' ordinal='3' />
            <column datatype='real' name='total_cases' ordinal='4' />
            <column datatype='real' name='total_deaths' ordinal='5' />
            <column datatype='real' name='people_vaccinated' ordinal='6' />
            <column datatype='real' name='people_fully_vaccinated' ordinal='7' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1efy99u1r6cvwk16fke381glrm9n' name='last_date.csv' table='[last_date#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='real' name='population' ordinal='3' />
            <column datatype='real' name='total_cases' ordinal='4' />
            <column datatype='real' name='total_deaths' ordinal='5' />
            <column datatype='real' name='people_vaccinated' ordinal='6' />
            <column datatype='real' name='people_fully_vaccinated' ordinal='7' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[last_date.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[last_date.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[last_date.csv]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[last_date.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[last_date.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[last_date.csv]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[last_date.csv]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_vaccinated</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_vaccinated]</local-name>
            <parent-name>[last_date.csv]</parent-name>
            <remote-alias>people_vaccinated</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_fully_vaccinated</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_fully_vaccinated]</local-name>
            <parent-name>[last_date.csv]</parent-name>
            <remote-alias>people_fully_vaccinated</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.07vnj5m128xjj41h1oyvt0lo602f].[avg:Calculation_1204431484962734086:qk]&quot;' value='Vaccinated Rate' />
          <alias key='&quot;[federated.07vnj5m128xjj41h1oyvt0lo602f].[avg:Calculation_1204431484963827719:qk]&quot;' value='Fully Vaccinated Rate' />
        </aliases>
      </column>
      <column caption='Infected Rate' datatype='real' default-format='p0.00%' name='[Calculation_1204431484962578437]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[total_cases]/[population]' />
      </column>
      <column caption='Vaccinated Rate' datatype='real' default-format='p0.00%' name='[Calculation_1204431484962734086]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[people_vaccinated]/[population]' />
      </column>
      <column caption='Fully Vaccinated Rate' datatype='real' default-format='p0.00%' name='[Calculation_1204431484963827719]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[people_fully_vaccinated]/[population]' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='last_date.csv' datatype='table' name='[__tableau_internal_object_id__].[last_date.csv_35A8564A8C6047DA940F041468DF50D7]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;Micronesia (country)&quot;' value='&quot;Federated States of Micronesia&quot;' />
          <semantic-value key='&quot;Timor&quot;' value='&quot;Timor Leste&quot;' />
          <semantic-value key='&quot;Vatican&quot;' value='&quot;Vatican City&quot;' />
        </semantic-values>
      </column>
      <column caption='People Fully Vaccinated' datatype='real' name='[people_fully_vaccinated]' role='measure' type='quantitative' />
      <column caption='People Vaccinated' datatype='real' name='[people_vaccinated]' role='measure' type='quantitative' />
      <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='real' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_1204431484962734086]' derivation='Avg' name='[avg:Calculation_1204431484962734086:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1204431484963827719]' derivation='Avg' name='[avg:Calculation_1204431484963827719:qk]' pivot='key' type='quantitative' />
      <column-instance column='[people_fully_vaccinated]' derivation='Avg' name='[avg:people_fully_vaccinated:qk]' pivot='key' type='quantitative' />
      <column-instance column='[people_vaccinated]' derivation='Avg' name='[avg:people_vaccinated:qk]' pivot='key' type='quantitative' />
      <column-instance column='[people_fully_vaccinated]' derivation='Sum' name='[sum:people_fully_vaccinated:qk]' pivot='key' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/benja/OneDrive/Documents/My Tableau Repository/Datasources/last_date.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='07/01/2021 09:10:26 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='last_date' increment-value='%null%' refresh-type='create' rows-inserted='221' timestamp-start='2021-07-01 21:10:26.215' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>last_date.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>221</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[last_date.csv_35A8564A8C6047DA940F041468DF50D7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>continent</remote-name>
              <remote-type>129</remote-type>
              <local-name>[continent]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>continent</remote-alias>
              <ordinal>1</ordinal>
              <family>last_date.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[last_date.csv_35A8564A8C6047DA940F041468DF50D7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>2</ordinal>
              <family>last_date.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[last_date.csv_35A8564A8C6047DA940F041468DF50D7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>5</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>3</ordinal>
              <family>last_date.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>221</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[last_date.csv_35A8564A8C6047DA940F041468DF50D7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_cases</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_cases</remote-alias>
              <ordinal>4</ordinal>
              <family>last_date.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>192</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[last_date.csv_35A8564A8C6047DA940F041468DF50D7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_deaths</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_deaths</remote-alias>
              <ordinal>5</ordinal>
              <family>last_date.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>178</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[last_date.csv_35A8564A8C6047DA940F041468DF50D7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>people_vaccinated</remote-name>
              <remote-type>5</remote-type>
              <local-name>[people_vaccinated]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>people_vaccinated</remote-alias>
              <ordinal>6</ordinal>
              <family>last_date.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>213</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[last_date.csv_35A8564A8C6047DA940F041468DF50D7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>people_fully_vaccinated</remote-name>
              <remote-type>5</remote-type>
              <local-name>[people_fully_vaccinated]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>people_fully_vaccinated</remote-alias>
              <ordinal>7</ordinal>
              <family>last_date.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>194</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[last_date.csv_35A8564A8C6047DA940F041468DF50D7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.07vnj5m128xjj41h1oyvt0lo602f].[avg:Calculation_1204431484963827719:qk]&quot;</bucket>
            </map>
            <map to='#67bf5c'>
              <bucket>&quot;[federated.07vnj5m128xjj41h1oyvt0lo602f].[avg:people_vaccinated:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.07vnj5m128xjj41h1oyvt0lo602f].[sum:people_fully_vaccinated:qk]&quot;</bucket>
            </map>
            <map to='#ff9e4a'>
              <bucket>&quot;[federated.07vnj5m128xjj41h1oyvt0lo602f].[avg:people_fully_vaccinated:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='last_date.csv' id='last_date.csv_35A8564A8C6047DA940F041468DF50D7'>
            <properties context=''>
              <relation connection='textscan.1efy99u1r6cvwk16fke381glrm9n' name='last_date.csv' table='[last_date#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='string' name='continent' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='real' name='population' ordinal='3' />
                  <column datatype='real' name='total_cases' ordinal='4' />
                  <column datatype='real' name='total_deaths' ordinal='5' />
                  <column datatype='real' name='people_vaccinated' ordinal='6' />
                  <column datatype='real' name='people_fully_vaccinated' ordinal='7' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='number_by_country' inline='true' name='federated.0qimdt6050mmi2131pj7p0zv7oqo' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='LAPTOP-CJEJNE92\SQLEXPRESS' name='sqlserver.08buyok1yx2cvj1768qr11bkw710'>
            <connection authentication='sspi' class='sqlserver' dbname='PortfolioProject' odbc-native-protocol='yes' one-time-sql='' server='LAPTOP-CJEJNE92\SQLEXPRESS' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='sqlserver.08buyok1yx2cvj1768qr11bkw710' name='number_by_country' table='[dbo].[number_by_country]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='sqlserver.08buyok1yx2cvj1768qr11bkw710' name='number_by_country' table='[dbo].[number_by_country]' type='table' />
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[number_by_country]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[number_by_country_3F6A57B40AA04E5DB2809F73828FD549]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[number_by_country]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[number_by_country_3F6A57B40AA04E5DB2809F73828FD549]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>3</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[number_by_country]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[number_by_country_3F6A57B40AA04E5DB2809F73828FD549]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='number_by_country' datatype='table' name='[__tableau_internal_object_id__].[number_by_country_3F6A57B40AA04E5DB2809F73828FD549]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Total Cases' datatype='real' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/benja/OneDrive/Documents/My Tableau Repository/Datasources/number_by_country.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='07/01/2021 09:10:34 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='number_by_country' increment-value='%null%' refresh-type='create' rows-inserted='221' timestamp-start='2021-07-01 21:10:34.264' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>number_by_country</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>221</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[number_by_country_3F6A57B40AA04E5DB2809F73828FD549]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_cases</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_cases</remote-alias>
              <ordinal>1</ordinal>
              <family>number_by_country</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>192</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[number_by_country_3F6A57B40AA04E5DB2809F73828FD549]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_deaths</remote-alias>
              <ordinal>2</ordinal>
              <family>number_by_country</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>178</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[number_by_country_3F6A57B40AA04E5DB2809F73828FD549]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='number_by_country' id='number_by_country_3F6A57B40AA04E5DB2809F73828FD549'>
            <properties context=''>
              <relation connection='sqlserver.08buyok1yx2cvj1768qr11bkw710' name='number_by_country' table='[dbo].[number_by_country]' type='table' />
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Rates' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='Rates' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Global_number'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Overview</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='global_number' name='federated.1ctpbeb1exvkc51bunlym0d64lmp' />
          </datasources>
          <datasource-dependencies datasource='federated.1ctpbeb1exvkc51bunlym0d64lmp'>
            <column caption='Death_Rate' datatype='real' default-format='p0.00%' name='[Calculation_1534038682388238336]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[World_Deaths]/[World_Cases]' />
            </column>
            <column caption='World Cases' datatype='real' name='[World_Cases]' role='measure' type='quantitative' />
            <column caption='World Deaths' datatype='integer' name='[World_Deaths]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1534038682388238336]' derivation='Sum' name='[sum:Calculation_1534038682388238336:qk]' pivot='key' type='quantitative' />
            <column-instance column='[World_Cases]' derivation='Sum' name='[sum:World_Cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[World_Deaths]' derivation='Sum' name='[sum:World_Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ctpbeb1exvkc51bunlym0d64lmp].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ctpbeb1exvkc51bunlym0d64lmp].[sum:Calculation_1534038682388238336:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ctpbeb1exvkc51bunlym0d64lmp].[sum:World_Cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ctpbeb1exvkc51bunlym0d64lmp].[sum:World_Deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1ctpbeb1exvkc51bunlym0d64lmp].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1ctpbeb1exvkc51bunlym0d64lmp].[sum:World_Cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.1ctpbeb1exvkc51bunlym0d64lmp].[sum:World_Deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.1ctpbeb1exvkc51bunlym0d64lmp].[sum:Calculation_1534038682388238336:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1ctpbeb1exvkc51bunlym0d64lmp].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1ctpbeb1exvkc51bunlym0d64lmp].[:Measure Names]' value='133' />
            <format attr='height' value='114' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.1ctpbeb1exvkc51bunlym0d64lmp].[:Measure Names]' value='#ffffff' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-color' scope='cols' value='#000000' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1ctpbeb1exvkc51bunlym0d64lmp].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1ctpbeb1exvkc51bunlym0d64lmp].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{BF4359A8-9E8A-4F4C-AA5C-EC45B2D31749}' />
    </worksheet>
    <worksheet name='Rates'>
      <table>
        <view>
          <datasources>
            <datasource caption='death_vaccine_cleaned' name='federated.17m32r803m4zkr173wuii171p0d6' />
          </datasources>
          <datasource-dependencies datasource='federated.17m32r803m4zkr173wuii171p0d6'>
            <column caption='Infected_Rate' datatype='real' default-format='n#,##0.00&quot;%&quot;;-#,##0.00&quot;%&quot;' name='[Calculation_1204431484942958592]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[total_cases]/[population]*100' />
            </column>
            <column caption='Death_Rate' datatype='real' default-format='n#,##0.00&quot;%&quot;;-#,##0.00&quot;%&quot;' name='[Calculation_1204431484943327233]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [total_cases]=0 THEN 0&#13;&#10;ELSE [total_deaths]/[total_cases]*100&#13;&#10;END' />
            </column>
            <column caption='Vaccinated_Rate' datatype='real' default-format='p0.00%' name='[Calculation_1204431484943650818]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[people_vaccinated]/[population]' />
            </column>
            <column-instance column='[Calculation_1204431484942958592]' derivation='Avg' name='[avg:Calculation_1204431484942958592:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1204431484943327233]' derivation='Avg' name='[avg:Calculation_1204431484943327233:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1204431484943650818]' derivation='Avg' name='[avg:Calculation_1204431484943650818:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Micronesia (country)&quot;' value='&quot;Federated States of Micronesia&quot;' />
                <semantic-value key='&quot;Timor&quot;' value='&quot;Timor Leste&quot;' />
                <semantic-value key='&quot;Vatican&quot;' value='&quot;Vatican City&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='People Vaccinated' datatype='real' name='[people_vaccinated]' role='measure' type='quantitative' />
            <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='real' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.17m32r803m4zkr173wuii171p0d6].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.17m32r803m4zkr173wuii171p0d6].[avg:Calculation_1204431484943327233:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.17m32r803m4zkr173wuii171p0d6].[avg:Calculation_1204431484942958592:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.17m32r803m4zkr173wuii171p0d6].[none:location:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:location:nk]' member='&quot;Canada&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
            <target field='[federated.17m32r803m4zkr173wuii171p0d6].[none:location:nk]' />
          </filter>
          <slices>
            <column>[federated.17m32r803m4zkr173wuii171p0d6].[none:location:nk]</column>
            <column>[federated.17m32r803m4zkr173wuii171p0d6].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.17m32r803m4zkr173wuii171p0d6].[avg:Calculation_1204431484943650818:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.17m32r803m4zkr173wuii171p0d6].[avg:Calculation_1204431484943650818:qk]' scope='rows' value='Vaccinated_Rate' />
            <format attr='title' class='0' field='[federated.17m32r803m4zkr173wuii171p0d6].[Multiple Values]' scope='rows' value='Infected &amp; Death Rate' />
            <format attr='tick-color' field='[federated.17m32r803m4zkr173wuii171p0d6].[avg:Calculation_1204431484943650818:qk]' value='#ffffff' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.17m32r803m4zkr173wuii171p0d6].[avg:Calculation_1204431484943650818:qk]' value='#f7d42a' />
            <format attr='background-color' value='#f7d42a' />
            <format attr='band-color' scope='rows' value='#f7d42a' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#f7d42a' />
            <format attr='band-color' scope='rows' value='#f7d42a' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f7d42a' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#f7d42a' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.17m32r803m4zkr173wuii171p0d6].[none:location:nk]' value='Select a country' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.17m32r803m4zkr173wuii171p0d6].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.17m32r803m4zkr173wuii171p0d6].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.17m32r803m4zkr173wuii171p0d6].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.17m32r803m4zkr173wuii171p0d6].[avg:Calculation_1204431484943650818:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.17m32r803m4zkr173wuii171p0d6].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.17m32r803m4zkr173wuii171p0d6].[Multiple Values] + [federated.17m32r803m4zkr173wuii171p0d6].[avg:Calculation_1204431484943650818:qk])</rows>
        <cols>[federated.17m32r803m4zkr173wuii171p0d6].[tmn:date:qk]</cols>
      </table>
      <simple-id uuid='{41D85B00-8767-44A3-941D-E9A68B699087}' />
    </worksheet>
    <worksheet name='Vaccinated_Rates'>
      <table>
        <view>
          <datasources>
            <datasource caption='last_date' name='federated.07vnj5m128xjj41h1oyvt0lo602f' />
          </datasources>
          <datasource-dependencies datasource='federated.07vnj5m128xjj41h1oyvt0lo602f'>
            <column-instance column='[people_fully_vaccinated]' derivation='Avg' name='[avg:people_fully_vaccinated:qk]' pivot='key' type='quantitative' />
            <column-instance column='[people_vaccinated]' derivation='Avg' name='[avg:people_vaccinated:qk]' pivot='key' type='quantitative' />
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column caption='People Fully Vaccinated' datatype='real' name='[people_fully_vaccinated]' role='measure' type='quantitative' />
            <column caption='People Vaccinated' datatype='real' name='[people_vaccinated]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.07vnj5m128xjj41h1oyvt0lo602f].[none:continent:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.07vnj5m128xjj41h1oyvt0lo602f].[avg:people_vaccinated:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.07vnj5m128xjj41h1oyvt0lo602f].[avg:people_fully_vaccinated:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='0' field='[federated.07vnj5m128xjj41h1oyvt0lo602f].[avg:people_vaccinated:qk]' scope='rows' value='People Vaccinated' />
            <format attr='title' class='0' field='[federated.07vnj5m128xjj41h1oyvt0lo602f].[avg:people_fully_vaccinated:qk]' scope='rows' value='People Fully Vaccinated' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.07vnj5m128xjj41h1oyvt0lo602f].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.07vnj5m128xjj41h1oyvt0lo602f].[avg:people_vaccinated:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.07vnj5m128xjj41h1oyvt0lo602f].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Continent:&#9;</run>
                <run bold='true'><![CDATA[<[federated.07vnj5m128xjj41h1oyvt0lo602f].[none:continent:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>People Vaccinated:&#9;</run>
                <run bold='true'><![CDATA[<[federated.07vnj5m128xjj41h1oyvt0lo602f].[avg:people_vaccinated:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.07vnj5m128xjj41h1oyvt0lo602f].[avg:people_fully_vaccinated:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.07vnj5m128xjj41h1oyvt0lo602f].[:Measure Names]' />
              <text column='[federated.07vnj5m128xjj41h1oyvt0lo602f].[avg:people_fully_vaccinated:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Continent:&#9;</run>
                <run bold='true'><![CDATA[<[federated.07vnj5m128xjj41h1oyvt0lo602f].[none:continent:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>People Fully Vaccinated:  </run>
                <run bold='true'><![CDATA[<[federated.07vnj5m128xjj41h1oyvt0lo602f].[avg:people_fully_vaccinated:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.07vnj5m128xjj41h1oyvt0lo602f].[avg:people_vaccinated:qk] + [federated.07vnj5m128xjj41h1oyvt0lo602f].[avg:people_fully_vaccinated:qk])</rows>
        <cols>[federated.07vnj5m128xjj41h1oyvt0lo602f].[none:continent:nk]</cols>
      </table>
      <simple-id uuid='{F45198A2-2CA2-4BFC-B4CA-3D3E3619C4F1}' />
    </worksheet>
    <worksheet name='Vaccinated_overview'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>[federated.17m32r803m4zkr173wuii171p0d6].[none:location:nk]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='last_date' name='federated.07vnj5m128xjj41h1oyvt0lo602f' />
            <datasource caption='death_vaccine_cleaned' name='federated.17m32r803m4zkr173wuii171p0d6' />
          </datasources>
          <datasource-dependencies datasource='federated.07vnj5m128xjj41h1oyvt0lo602f'>
            <column caption='Vaccinated Rate' datatype='real' default-format='p0.00%' name='[Calculation_1204431484962734086]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[people_vaccinated]/[population]' />
            </column>
            <column caption='Fully Vaccinated Rate' datatype='real' default-format='p0.00%' name='[Calculation_1204431484963827719]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[people_fully_vaccinated]/[population]' />
            </column>
            <column-instance column='[Calculation_1204431484962734086]' derivation='Avg' name='[avg:Calculation_1204431484962734086:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1204431484963827719]' derivation='Avg' name='[avg:Calculation_1204431484963827719:qk]' pivot='key' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Micronesia (country)&quot;' value='&quot;Federated States of Micronesia&quot;' />
                <semantic-value key='&quot;Timor&quot;' value='&quot;Timor Leste&quot;' />
                <semantic-value key='&quot;Vatican&quot;' value='&quot;Vatican City&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='People Fully Vaccinated' datatype='real' name='[people_fully_vaccinated]' role='measure' type='quantitative' />
            <column caption='People Vaccinated' datatype='real' name='[people_vaccinated]' role='measure' type='quantitative' />
            <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
            <column-instance column='[people_fully_vaccinated]' derivation='Sum' name='[sum:people_fully_vaccinated:qk]' pivot='key' type='quantitative' />
            <column-instance column='[people_vaccinated]' derivation='Sum' name='[sum:people_vaccinated:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.17m32r803m4zkr173wuii171p0d6'>
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Micronesia (country)&quot;' value='&quot;Federated States of Micronesia&quot;' />
                <semantic-value key='&quot;Timor&quot;' value='&quot;Timor Leste&quot;' />
                <semantic-value key='&quot;Vatican&quot;' value='&quot;Vatican City&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.07vnj5m128xjj41h1oyvt0lo602f].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07vnj5m128xjj41h1oyvt0lo602f].[sum:people_vaccinated:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07vnj5m128xjj41h1oyvt0lo602f].[sum:people_fully_vaccinated:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07vnj5m128xjj41h1oyvt0lo602f].[avg:Calculation_1204431484962734086:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.07vnj5m128xjj41h1oyvt0lo602f].[avg:Calculation_1204431484963827719:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.07vnj5m128xjj41h1oyvt0lo602f].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.07vnj5m128xjj41h1oyvt0lo602f].[sum:people_vaccinated:qk]&quot;</bucket>
              <bucket>&quot;[federated.07vnj5m128xjj41h1oyvt0lo602f].[sum:people_fully_vaccinated:qk]&quot;</bucket>
              <bucket>&quot;[federated.07vnj5m128xjj41h1oyvt0lo602f].[avg:Calculation_1204431484962734086:qk]&quot;</bucket>
              <bucket>&quot;[federated.07vnj5m128xjj41h1oyvt0lo602f].[avg:Calculation_1204431484963827719:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.07vnj5m128xjj41h1oyvt0lo602f].[none:location:nk]'>
            <groupfilter function='level-members' level='[none:location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.17m32r803m4zkr173wuii171p0d6].[none:location:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:location:nk]' member='&quot;Canada&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
            <target field='[federated.07vnj5m128xjj41h1oyvt0lo602f].[none:location:nk]' />
          </filter>
          <slices>
            <column>[federated.07vnj5m128xjj41h1oyvt0lo602f].[:Measure Names]</column>
            <column>[federated.07vnj5m128xjj41h1oyvt0lo602f].[none:location:nk]</column>
            <column>[federated.17m32r803m4zkr173wuii171p0d6].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.07vnj5m128xjj41h1oyvt0lo602f].[:Measure Names]' value='224' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.07vnj5m128xjj41h1oyvt0lo602f].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.07vnj5m128xjj41h1oyvt0lo602f].[:Measure Names]</rows>
        <cols />
      </table>
      <simple-id uuid='{BD3FEE36-D566-4E38-9213-3DD87DFEB15C}' />
    </worksheet>
    <worksheet name='death_by_continent'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Death_by_Continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Deaths_by_continent' name='federated.1tabam71o31b7f12li4d908ejg2u' />
          </datasources>
          <datasource-dependencies datasource='federated.1tabam71o31b7f12li4d908ejg2u'>
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1tabam71o31b7f12li4d908ejg2u].[none:location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1tabam71o31b7f12li4d908ejg2u].[sum:Deaths:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1tabam71o31b7f12li4d908ejg2u].[sum:Deaths:qk]' field-type='quantitative' max='1200000' min='0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1tabam71o31b7f12li4d908ejg2u].[sum:Deaths:qk]</rows>
        <cols>[federated.1tabam71o31b7f12li4d908ejg2u].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{7B3070BC-8F25-4BDA-B993-4B09A0187A38}' />
    </worksheet>
    <worksheet name='death_map'>
      <table>
        <view>
          <datasources>
            <datasource caption='infect_rate_death_rate_by_country' name='federated.162eqd91v9yni510ey24c1rg1nrk' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.162eqd91v9yni510ey24c1rg1nrk'>
            <column caption='Death Rate' datatype='real' default-format='p0.00%' name='[Death_Rate]' role='measure' type='quantitative' />
            <column caption='Infection Rate' datatype='real' default-format='p0.00%' name='[Infection_Rate]' role='measure' type='quantitative' />
            <column-instance column='[Death_Rate]' derivation='Avg' name='[avg:Death_Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Infection_Rate]' derivation='Avg' name='[avg:Infection_Rate:qk]' pivot='key' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Timor&quot;' value='&quot;Timor Leste&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.162eqd91v9yni510ey24c1rg1nrk].[Longitude (generated)]' field-type='quantitative' max='22955313.570879802' min='-69371285.775194243' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.162eqd91v9yni510ey24c1rg1nrk].[Latitude (generated)]' field-type='quantitative' max='18949909.724372115' min='-8984806.036076555' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='1' field='[federated.162eqd91v9yni510ey24c1rg1nrk].[Longitude (generated)]' field-type='quantitative' fold='true' max='22955313.570879802' min='-69371285.775194243' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.162eqd91v9yni510ey24c1rg1nrk].[avg:Infection_Rate:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#f2dada</color>
                <color>#f3c3c3</color>
                <color>#f5abab</color>
                <color>#f69393</color>
                <color>#f87c7c</color>
                <color>#f96363</color>
                <color>#fa4b4b</color>
                <color>#fc3232</color>
                <color>#fd1919</color>
                <color>#ff0000</color>
              </color-palette>
            </encoding>
            <encoding attr='color' field='[federated.162eqd91v9yni510ey24c1rg1nrk].[avg:Death_Rate:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#d8d8d8</color>
                <color>#c0c0c0</color>
                <color>#a8a8a8</color>
                <color>#909090</color>
                <color>#787878</color>
                <color>#606060</color>
                <color>#484848</color>
                <color>#303030</color>
                <color>#181818</color>
                <color>#000000</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.162eqd91v9yni510ey24c1rg1nrk].[avg:Infection_Rate:qk]' value='Infection Rate'>
              <formatted-text>
                <run>Infection Rate</run>
              </formatted-text>
            </format>
            <format attr='size' field='[federated.162eqd91v9yni510ey24c1rg1nrk].[avg:Death_Rate:qk]' value='Death Rate'>
              <formatted-text>
                <run>Death Rate</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.162eqd91v9yni510ey24c1rg1nrk].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.162eqd91v9yni510ey24c1rg1nrk].[Longitude (generated)]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.162eqd91v9yni510ey24c1rg1nrk].[avg:Infection_Rate:qk]' />
              <lod column='[federated.162eqd91v9yni510ey24c1rg1nrk].[none:location:nk]' />
              <geometry column='[federated.162eqd91v9yni510ey24c1rg1nrk].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.162eqd91v9yni510ey24c1rg1nrk].[Longitude (generated)]' x-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.162eqd91v9yni510ey24c1rg1nrk].[avg:Death_Rate:qk]' />
              <size column='[federated.162eqd91v9yni510ey24c1rg1nrk].[avg:Death_Rate:qk]' />
              <lod column='[federated.162eqd91v9yni510ey24c1rg1nrk].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-transparency' value='255' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.162eqd91v9yni510ey24c1rg1nrk].[Latitude (generated)]</rows>
        <cols>([federated.162eqd91v9yni510ey24c1rg1nrk].[Longitude (generated)] + [federated.162eqd91v9yni510ey24c1rg1nrk].[Longitude (generated)])</cols>
      </table>
      <simple-id uuid='{9DAF3577-5D2F-4D1F-BFFE-6F50D8F5840A}' />
    </worksheet>
    <worksheet name='forcast'>
      <table>
        <view>
          <datasources>
            <datasource caption='infect_rate_by_date' name='federated.1nhmxuw03poqcp15qqw8n04myy9i' />
          </datasources>
          <datasource-dependencies datasource='federated.1nhmxuw03poqcp15qqw8n04myy9i'>
            <column caption='Infect Rate' datatype='real' name='[Infect_Rate]' role='measure' type='quantitative' />
            <column-instance column='[Infect_Rate]' derivation='Avg' name='[avg:Infect_Rate:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='datetime' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Infect_Rate]' derivation='Avg' forecast-column-base='[avg:Infect_Rate:qk]' forecast-column-type='forecast-value' name='[fVal:avg:Infect_Rate:qk]' pivot='key' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1nhmxuw03poqcp15qqw8n04myy9i].[tmn:date:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[federated.1nhmxuw03poqcp15qqw8n04myy9i].[fVal:avg:Infect_Rate:qk]' scope='rows' value='Infect Rate' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1nhmxuw03poqcp15qqw8n04myy9i].[none:location:nk]' />
              <text column='[federated.1nhmxuw03poqcp15qqw8n04myy9i].[none:location:nk]' />
              <color column='[federated.1nhmxuw03poqcp15qqw8n04myy9i].[none:Forecast Indicator:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1nhmxuw03poqcp15qqw8n04myy9i].[fVal:avg:Infect_Rate:qk]</rows>
        <cols>[federated.1nhmxuw03poqcp15qqw8n04myy9i].[tmn:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{99B769B0-E785-4EBE-8FCB-7293A687F375}' />
    </worksheet>
    <worksheet name='vaccinated_map'>
      <table>
        <view>
          <datasources>
            <datasource caption='last_date' name='federated.07vnj5m128xjj41h1oyvt0lo602f' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.07vnj5m128xjj41h1oyvt0lo602f'>
            <column caption='Vaccinated Rate' datatype='real' default-format='p0.00%' name='[Calculation_1204431484962734086]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[people_vaccinated]/[population]' />
            </column>
            <column caption='Fully Vaccinated Rate' datatype='real' default-format='p0.00%' name='[Calculation_1204431484963827719]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[people_fully_vaccinated]/[population]' />
            </column>
            <column-instance column='[Calculation_1204431484962734086]' derivation='Avg' name='[avg:Calculation_1204431484962734086:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1204431484963827719]' derivation='Avg' name='[avg:Calculation_1204431484963827719:qk]' pivot='key' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Micronesia (country)&quot;' value='&quot;Federated States of Micronesia&quot;' />
                <semantic-value key='&quot;Timor&quot;' value='&quot;Timor Leste&quot;' />
                <semantic-value key='&quot;Vatican&quot;' value='&quot;Vatican City&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='People Fully Vaccinated' datatype='real' name='[people_fully_vaccinated]' role='measure' type='quantitative' />
            <column caption='People Vaccinated' datatype='real' name='[people_vaccinated]' role='measure' type='quantitative' />
            <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.07vnj5m128xjj41h1oyvt0lo602f].[Longitude (generated)]' field-type='quantitative' fold='true' max='43359130.196665995' min='-41445587.840945534' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.07vnj5m128xjj41h1oyvt0lo602f].[Longitude (generated)]' field-type='quantitative' max='43359130.196665995' min='-41445587.840945534' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.07vnj5m128xjj41h1oyvt0lo602f].[Latitude (generated)]' field-type='quantitative' max='18399308.915382493' min='-5172052.8396869591' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.07vnj5m128xjj41h1oyvt0lo602f].[avg:Calculation_1204431484962734086:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#daf2da</color>
                <color>#c3f3c3</color>
                <color>#abf5ab</color>
                <color>#93f693</color>
                <color>#7cf87c</color>
                <color>#63f963</color>
                <color>#4bfa4b</color>
                <color>#32fc32</color>
                <color>#19fd19</color>
                <color>#00ff00</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' data-class='total' scope='rows' value='#ffffff' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.07vnj5m128xjj41h1oyvt0lo602f].[avg:Calculation_1204431484962734086:qk]' value='Vaccinated Rate' />
            <format attr='size' field='[federated.07vnj5m128xjj41h1oyvt0lo602f].[avg:Calculation_1204431484963827719:qk]' value='Fully Vaccinated Rate' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.07vnj5m128xjj41h1oyvt0lo602f].[none:location:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.07vnj5m128xjj41h1oyvt0lo602f].[Longitude (generated)]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.07vnj5m128xjj41h1oyvt0lo602f].[avg:Calculation_1204431484962734086:qk]' />
              <lod column='[federated.07vnj5m128xjj41h1oyvt0lo602f].[none:location:nk]' />
              <geometry column='[federated.07vnj5m128xjj41h1oyvt0lo602f].[Geometry (generated)]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.07vnj5m128xjj41h1oyvt0lo602f].[Longitude (generated)]' x-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.07vnj5m128xjj41h1oyvt0lo602f].[avg:Calculation_1204431484963827719:qk]' />
              <lod column='[federated.07vnj5m128xjj41h1oyvt0lo602f].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ffaa00' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.07vnj5m128xjj41h1oyvt0lo602f].[Latitude (generated)]</rows>
        <cols>([federated.07vnj5m128xjj41h1oyvt0lo602f].[Longitude (generated)] + [federated.07vnj5m128xjj41h1oyvt0lo602f].[Longitude (generated)])</cols>
      </table>
      <simple-id uuid='{88826734-6F64-4A96-AC60-B74AB96BA66A}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Deaths Summary'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='14' param='horz' w='98400' x='800' y='1000'>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='98000' id='7' w='98400' x='800' y='1000'>
              <zone h='35500' id='3' name='Global_number' w='43700' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='35500' id='5' name='death_by_continent' w='54700' x='44500' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='38000' id='6' name='death_map' show-title='false' w='98400' x='800' y='36500'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='24500' id='12' name='forcast' show-title='false' w='98400' x='800' y='74500'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='12500' id='10' name='death_map' pane-specification-id='5' param='[federated.162eqd91v9yni510ey24c1rg1nrk].[avg:Infection_Rate:qk]' w='14000' x='84600' y='37750' />
        <zone _.fcp.SetMembershipControl.false...type='size' _.fcp.SetMembershipControl.true...type-v2='size' h='22000' id='11' name='death_map' pane-specification-id='6' param='[federated.162eqd91v9yni510ey24c1rg1nrk].[avg:Death_Rate:qk]' w='14000' x='84200' y='47250' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1200' minheight='1200' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='40' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='39' param='vert' w='98400' x='800' y='1000'>
                <zone fixed-size='276' h='35500' id='3' is-fixed='true' name='Global_number' w='43700' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='276' h='35500' id='5' is-fixed='true' name='death_by_continent' w='54700' x='44500' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38000' id='6' is-fixed='true' name='death_map' show-title='false' w='98400' x='800' y='36500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='12500' id='10' name='death_map' pane-specification-id='5' param='[federated.162eqd91v9yni510ey24c1rg1nrk].[avg:Infection_Rate:qk]' w='14000' x='84600' y='37750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='size' _.fcp.SetMembershipControl.true...type-v2='size' h='22000' id='11' name='death_map' pane-specification-id='6' param='[federated.162eqd91v9yni510ey24c1rg1nrk].[avg:Death_Rate:qk]' w='14000' x='84200' y='47250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='188' h='24500' id='12' is-fixed='true' name='forcast' show-title='false' w='98400' x='800' y='74500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{7CC18807-7685-4C53-9643-3E0140BAC8F1}' />
    </dashboard>
    <dashboard name='Presentation' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='2' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98340' id='1' param='vert' removable='false' w='98426' x='787' y='830'>
            <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5187' id='3' w='98426' x='787' y='830' />
            <zone _.fcp.SetMembershipControl.false...type='flipboard-nav' _.fcp.SetMembershipControl.true...type-v2='flipboard-nav' h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' w='98426' x='787' y='6017' />
            <zone _.fcp.SetMembershipControl.false...type='flipboard' _.fcp.SetMembershipControl.true...type-v2='flipboard' h='82676' id='5' paired-zone-id='4' removable='false' w='98426' x='787' y='16494'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Showing Deaths' captured-sheet='Deaths Summary' id='1' />
                  <story-point caption='Showing Vaccinations' captured-sheet='Vaccination Summary' id='2' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{F1EAE8CA-1A9D-41EA-90DB-F891AD1D365D}' />
    </dashboard>
    <dashboard name='Vaccination Summary'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='death_vaccine_cleaned' name='federated.17m32r803m4zkr173wuii171p0d6' />
      </datasources>
      <datasource-dependencies datasource='federated.17m32r803m4zkr173wuii171p0d6'>
        <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
          <semantic-values semantic-role='[Country].[Name]'>
            <semantic-value key='&quot;Micronesia (country)&quot;' value='&quot;Federated States of Micronesia&quot;' />
            <semantic-value key='&quot;Timor&quot;' value='&quot;Timor Leste&quot;' />
            <semantic-value key='&quot;Vatican&quot;' value='&quot;Vatican City&quot;' />
          </semantic-values>
        </column>
        <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='33625' id='8' param='horz' w='98400' x='800' y='1000'>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='33625' id='6' w='98400' x='800' y='1000'>
              <zone h='33625' id='5' name='Vaccinated_Rates' show-title='false' w='62900' x='36300' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='33625' id='16' name='Vaccinated_overview' w='35500' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='35000' id='10' name='vaccinated_map' show-title='false' w='98400' x='800' y='34625'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='29375' id='13' name='Rates' show-title='false' w='98400' x='800' y='69625'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='12500' id='11' name='vaccinated_map' pane-specification-id='1' param='[federated.07vnj5m128xjj41h1oyvt0lo602f].[avg:Calculation_1204431484962734086:qk]' w='14000' x='84300' y='35625' />
        <zone _.fcp.SetMembershipControl.false...type='size' _.fcp.SetMembershipControl.true...type-v2='size' h='25125' id='12' name='vaccinated_map' pane-specification-id='2' param='[federated.07vnj5m128xjj41h1oyvt0lo602f].[avg:Calculation_1204431484963827719:qk]' w='14000' x='84800' y='44750' />
        <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='12625' id='15' name='Rates' pane-specification-id='5' param='[federated.17m32r803m4zkr173wuii171p0d6].[:Measure Names]' show-title='false' w='17600' x='8700' y='53250' />
        <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='8750' id='14' mode='dropdown' name='Rates' param='[federated.17m32r803m4zkr173wuii171p0d6].[none:location:nk]' w='16800' x='900' y='25125' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1350' minheight='1350' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='24' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='23' param='vert' w='98400' x='800' y='1000'>
                <zone fixed-size='261' h='33625' id='16' is-fixed='true' name='Vaccinated_overview' w='35500' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='261' h='33625' id='5' is-fixed='true' name='Vaccinated_Rates' show-title='false' w='62900' x='36300' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='272' h='35000' id='10' is-fixed='true' name='vaccinated_map' show-title='false' w='98400' x='800' y='34625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='12500' id='11' name='vaccinated_map' pane-specification-id='1' param='[federated.07vnj5m128xjj41h1oyvt0lo602f].[avg:Calculation_1204431484962734086:qk]' w='14000' x='84300' y='35625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='size' _.fcp.SetMembershipControl.true...type-v2='size' h='25125' id='12' name='vaccinated_map' pane-specification-id='2' param='[federated.07vnj5m128xjj41h1oyvt0lo602f].[avg:Calculation_1204431484963827719:qk]' w='14000' x='84800' y='44750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='8750' id='14' mode='dropdown' name='Rates' param='[federated.17m32r803m4zkr173wuii171p0d6].[none:location:nk]' w='16800' x='900' y='25125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='227' h='29375' id='13' is-fixed='true' name='Rates' show-title='false' w='98400' x='800' y='69625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='12625' id='15' name='Rates' pane-specification-id='5' param='[federated.17m32r803m4zkr173wuii171p0d6].[:Measure Names]' show-title='false' w='17600' x='8700' y='53250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{E08EC305-FE3A-40B0-9848-24C59C7E934F}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='229'>
    <window class='worksheet' name='Global_number'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ctpbeb1exvkc51bunlym0d64lmp].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8297DDAE-CF4F-4697-9876-98F2D664CADF}' />
    </window>
    <window class='worksheet' name='death_by_continent'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1tabam71o31b7f12li4d908ejg2u].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4256150A-9BF9-4823-BF41-2C2E213794E2}' />
    </window>
    <window class='worksheet' name='death_map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='5' param='[federated.162eqd91v9yni510ey24c1rg1nrk].[avg:Infection_Rate:qk]' type='color' />
            <card pane-specification-id='6' param='[federated.162eqd91v9yni510ey24c1rg1nrk].[avg:Death_Rate:qk]' type='size' />
            <card pane-specification-id='6' param='[federated.162eqd91v9yni510ey24c1rg1nrk].[avg:Death_Rate:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.162eqd91v9yni510ey24c1rg1nrk].[avg:Infection_Rate:qk]</field>
            <field>[federated.162eqd91v9yni510ey24c1rg1nrk].[none:location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{46E97D0A-FD43-4BAB-BBBC-94D3EDA5DF18}' />
    </window>
    <window class='worksheet' name='forcast'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1nhmxuw03poqcp15qqw8n04myy9i].[none:location:nk]&#10;[federated.1nhmxuw03poqcp15qqw8n04myy9i].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1nhmxuw03poqcp15qqw8n04myy9i].[none:Forecast Indicator:nk]</field>
            <field>[federated.1nhmxuw03poqcp15qqw8n04myy9i].[none:location:nk]</field>
            <field>[federated.1nhmxuw03poqcp15qqw8n04myy9i].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3A3866B4-5F9D-4910-BC1B-28CC4B415909}' />
    </window>
    <window class='dashboard' name='Deaths Summary'>
      <viewpoints>
        <viewpoint name='Global_number' />
        <viewpoint name='death_by_continent'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='death_map'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='forcast'>
          <zoom type='entire-view' />
          <highlight field='[federated.1nhmxuw03poqcp15qqw8n04myy9i].[none:location:nk]&#10;[federated.1nhmxuw03poqcp15qqw8n04myy9i].[none:Forecast Indicator:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{A7613C62-9DD7-43A4-8EFA-A892064D9C0F}' />
    </window>
    <window class='worksheet' name='Rates'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.17m32r803m4zkr173wuii171p0d6].[none:location:nk]' type='filter' />
            <card pane-specification-id='5' param='[federated.17m32r803m4zkr173wuii171p0d6].[:Measure Names]' show-title='false' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.17m32r803m4zkr173wuii171p0d6].[none:location:nk]</field>
            <field>[federated.17m32r803m4zkr173wuii171p0d6].[tmn:date:qk]</field>
            <field>[federated.17m32r803m4zkr173wuii171p0d6].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F16AEF17-7961-4527-9CE1-534573F4A448}' />
    </window>
    <window class='worksheet' name='vaccinated_map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.07vnj5m128xjj41h1oyvt0lo602f].[avg:Calculation_1204431484962734086:qk]' type='color' />
            <card pane-specification-id='2' param='[federated.07vnj5m128xjj41h1oyvt0lo602f].[avg:Calculation_1204431484963827719:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07vnj5m128xjj41h1oyvt0lo602f].[avg:Calculation_1204431484962578437:qk]</field>
            <field>[federated.07vnj5m128xjj41h1oyvt0lo602f].[avg:Calculation_1204431484962734086:qk]</field>
            <field>[federated.07vnj5m128xjj41h1oyvt0lo602f].[none:location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{8DAE08EB-EEAB-446E-A46D-5ED95D06C283}' />
    </window>
    <window class='worksheet' name='Vaccinated_Rates'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.07vnj5m128xjj41h1oyvt0lo602f].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07vnj5m128xjj41h1oyvt0lo602f].[:Measure Names]</field>
            <field>[federated.07vnj5m128xjj41h1oyvt0lo602f].[none:continent:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D9E6BDBB-00AC-41BB-A5E1-E0A9CE5EF2BC}' />
    </window>
    <window class='worksheet' name='Vaccinated_overview'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.07vnj5m128xjj41h1oyvt0lo602f].[none:location:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07vnj5m128xjj41h1oyvt0lo602f].[:Measure Names]</field>
            <field>[federated.07vnj5m128xjj41h1oyvt0lo602f].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8A3204F4-F504-41C3-8A7A-445B2DDCB987}' />
    </window>
    <window class='dashboard' name='Vaccination Summary'>
      <viewpoints>
        <viewpoint name='Rates'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Vaccinated_Rates'>
          <zoom type='entire-view' />
          <highlight field='[federated.07vnj5m128xjj41h1oyvt0lo602f].[:Measure Names]'>
            <color-one-way>
              <field>[federated.07vnj5m128xjj41h1oyvt0lo602f].[:Measure Names]</field>
            </color-one-way>
            <bucket-selection>
              <bucket>&quot;[federated.07vnj5m128xjj41h1oyvt0lo602f].[avg:people_fully_vaccinated:qk]&quot;</bucket>
            </bucket-selection>
          </highlight>
        </viewpoint>
        <viewpoint name='Vaccinated_overview' />
        <viewpoint name='vaccinated_map'>
          <zoom type='entire-view' />
          <highlight field='[federated.07vnj5m128xjj41h1oyvt0lo602f].[avg:Calculation_1204431484963827719:qk]' type='size'>
            <bucket-selection />
          </highlight>
          <default-map-tool-selection tool='1' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{DEA55FAC-F021-4D35-A881-FF8001CD0669}' />
    </window>
    <window class='dashboard' maximized='true' name='Presentation'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{710F18D6-FE78-45ED-B5C6-D7A1C472A9BA}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Deaths Summary' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nOy9d3Ae15Xg++sv4kvAh5wzSGQwgBCTGCTLkmXLlizLceyxPTvBntp9Na9q
      pmqr3lSt6r3a2vd2t7Zma3ZtyfZI8sjS2FYmrUBRlJiTGEDknPFFfDmn7vcHgggCIEESICWy
      f1Uogo2+fU9339P33nPPOVeQJElCRuY+RXG3BZCRuZvICiBzXyMrgMx9jawAMvc1sgLI3NfI
      CiBzX7NEAWwTg7z0wm84eOgYqTUwkDonBhiYcN7+hWRWIMm/vfArfvWrX/PxqYus9pUFnROM
      WDwAxN3jHLvUf93zrf2X6Bx337R0Xuc0r/z2Bf745kGiydWVudLRsfD7qdOnbrrOeSwjPTiD
      1690kQKEXRO88vZRvvvDn1BfpOXl194l7HPhC8UBCHqdBKJJxESMjiuX8YdjANjtNpLxMEOj
      k1it1oXr2Ww2MrLzyc00AuBxWunsHUSUwDtjI5KQAJGhoZFF15e5GZKERR1/9Zf/jizBzUt/
      eA9gyTtKRENcuXyJKdsMIHLp1MccOXqKzt4hxHgIp9tHf08nthnvsrVEgx6czhkuX+kglhSJ
      hbw4PYHZa0f8C78vkizs4jcvv8kTz/wZj+zejCiCmIrTdaV94XyXzU4o7Ke9/QrRhIhlYoT3
      3n+PixcvEogkqa6uAcBmtxP2u2m/0klCnFXzgMfJlc5eUuJsO7LbHEwM9zM6ZYNkhKNHPuDE
      mU/pH5lY8ektUoBLZ07wjR/8GJ1GRU3zDoSwE6UU5uAHRwH48P1DKNUCL/zqeULROL/99fOE
      k/Dhu2/x25d+RzQp8uF775MEAtZeznVP4x7v4tKADcdIB3989zg++xivvPEuYfsQxy4PErT0
      8j9+8TuiIhz54AMkpXJ1711mEYJCweZdX0YK24HUknd05fIFIvEUHx94lSFHaEn5058cxu4N
      8dJv/3XFOi6cP0cs6OGf/vevUasUvPHGOwCc/PBdgqJqyfkdZ4/y5Wd+TIZBS1Z+KXqNxAu/
      /F94wjHefuU3DFl9nD18gH975xDRsJdX/vjmkmsc/uij2X8PvM47h44S9k7zxzc/IuAY4bd/
      fJewz86Lr7wBxPnn//r/0jdu570/vIQzsrrntkjqRDxJmvazQ4JSgdZcSjLwMZIYIyxpUXtH
      6RxzIqqv4HdO0DPhJhKN88O/+g/o1QrUriI+7bMx03mZfd/4HtHhMwCcPXmWeAx6BnyMWNz8
      6Om/48i/HeSiS8PPvr+XjiEnYUlFulpYneQyy6JQKEi4lr4jKRHlSl8/IaeD8ckZGjduIBEp
      orm+kqith10Pf4W9u1oZHx1e8dq793+ZHQ0FOIYnCWrTydHG8ERTTPoSPJStW3J+LBYlS5f2
      2YGQBU3RZvbs3M7uzaX8/v1LZKDnme9/GzMwPPoyRWVVlJSU0trauvhiejPf//bTQJTRl//E
      5bMnicRjdPYM0D1iAZ6gfssuHn14L4bIOMGUjtqqMnSNW6gtSGMlFilA46ZmDh05zo+e2k80
      MEMoNtsYW8rMHDj4Hhu37UWlV9C8qZW//OFTSGKCWEKgPyMLvXq2M6lt28e//v4AaoUKs1aB
      be7aZnMGdY99lY35JqLRKCjSUEhx/Mk09m1t44+/fw2lsWxFQWVuTNhnJxwXUOkzlryj3x+3
      8Dd//dcMnv+ACUBQCCQTtzLclLCHguiBrzy6hz/87l/Irdy27JmNm9v4/aEPqP3hN0ASEbVm
      Yp7ZFmEfH8eQnQ0hy5JyqVTqhlJkms3srXuM7RvzZ9vTMgiC4ob3uGgIlFe9lSqjn18+9zwv
      vvoO3/nutwHY8uBDdPdO0LoxH0GXS0OBil8+9xy//pd/JZSUyM/L/+wiSh0FuiiVzdsB0BjS
      yTSmsfsrX+P0gVd4/vlf8d7HpwFoqMhDMOWB0oAiEWDzAw/c8MZlrkWB3z7K88//ilffOswP
      f/j9Zd9RSbaBX/3mN1wasJJpTCOvehNjF97jD+98iEJjWJinLXqXV5GWkU/36Xf55S9+wZa9
      j6ICjPkbcVun2L9ny7Jl0gs30lal5xe/fI7nnv81/qSBBxoL+OVzz/Pep1N8bW8LWfl5C1/h
      vPzZuitzjTz3q19j9UbJz8+7Ri4F+fm5NO3+CsOnD/D888/zxnsfLxwHSM/KJ00FDa27Ofrm
      v/DuXHtbDkF2hpO5lpDPRd/Q2GcHVGm0bmpccl73pVOc73Pw0x98c9VlPm/ICiBzy/T1dFFV
      24hG+cWdt8kKIHNfI68Ey9zXyAogc1+zKgU4/OGHxFxjvPjaBwy1n2R0ZqnZ6ZVXXl74/eVX
      XgFgrPci//sXz3Glf/yWhHONdXKx38KBV3+DxZ/koyMfLTknauvh9SMXATj17suMeuHSsXf5
      518+x1vvH1v2ukFrP2c6x7l45HVGl1/4XJF333yV5375C4592rXs38c7z9BvDfLuG2+w5CkF
      rfzf/+W/8YvnXyR6laXvzIeHCd6cGDKr4NKxD3HHr3/O0uW7ZfDPOLnUISEJSboGpmlNz+C/
      /vZjsgpKMCQcRDT5aIHBS8c5cLIbVBoAjp7p4G//9mcIJPnjv/4Lk0GBxgIto44gjzz0IG/9
      6UOKymtJOvuIG8v46x89s6jerMJiDh04h5E43Zc/xe1L8cpv/hmbO8xXH3+Y375xhO882gaY
      +OX/+P+wOyz8ePeP8DjdfPunP+PE71/gwjk4ce4KtS07UQdGOdsxyf5tRbxzYoRH2qo59dpv
      0etNqPxjy8pwLe6IxM9+/re88MILqL0jXOgeYNvDTzLVfpzJoEC1zku7o4vmCg2vvvQ8hpx6
      vvvE3tnCyShqUy6qmAuv18O7b71OSptJcOAcXb4o+aKbgTEr3/p3/weVOfrVvBqZ6+Bx2ikS
      wTnayYtvzrbXEl2UMVeSh/dt4+MPD62uB2iqyuLjXjf1ZgX2uMDM2ACPPP0jhJgPpSGbn/7g
      aQBGhqf4wU9/jFmvBkBIxQiE4wSck4SVGcTCPmpq60iGvHR2dFBQ1US2WU99YyOuyUki10zH
      BW0WorebtNLdjJ07SEldCzFBz9OPtDI6NcOuLz1BQ1UhEEafVcPeB1oWykpiCm8oysToKE1b
      2tCrEjg9YQzJGOV1dex+5GvkGFR8/ds/xqwTV5RhOVLxMNGEyMj4FK07dpFyjS/cX11tPY89
      9SRalZEf/OTHqGKLfWSkVJSQMhN1YApDTgkBr5v6umaefPKrTNmc7NrRSsi31K9G5taZGv2s
      vdq9UX76599jcmSU2oYNKJ999tlnb3SBzMwswvEUD2zaQFwwsH3nDk4depvm7Q9RmJtJXu7s
      AsSW1k28+8571NQ3UFZcSE1VKW+9+QYZRTW4J4cor20kU6fA7hf5xlNPMt51HmNuKcqYH5W5
      gE111VxrUIuGgtRuboNEgi1tWzGr45wf8vHVhx9ArTWSnWFAoclEn3JiDylobGwkTZXkg3ff
      Z+eXvsr2LY2cO3WS0g0tEHZiyCtn87Y2ek5/RGF1E3n5+ehUEPG5V5ThapIBB+9/fIavPvlN
      mjaWc/LUeRq2bsc1d3+trVs5/sGH1G1uJj83FzEaYspinXUSVOsorqilbUMOPsnI5HA/Dc0t
      tG6t58OPzvClXVs4f2WAra1bMaSpb/2Ny8yR5P2Df6L+gUfoOf0BzdsfYktdCW8ePMKmllqG
      JmcWm0EDAfnL83lBqVSi138+hkGiKKJQ3Jv2EnkdQOaGpFIplPeol+69qdYyMqtkVVYgmS8G
      FsusZ2VRUdG6XP+ll15ibGxs1eevYnp515GHQPcQFy9exGKx0NrauqZKMD8E2r9/P8eOLb+2
      shxfhKYlD4HuMaxWK0ePHqW/f3GMbyTgZWhsNjRwcmyYwZEJpFSc3p5ubE4vAY+Tru5uwvEU
      rhkX8ZAHl395P/t7CXkIdA/R2tq6NJJqDlGhRkpEQAzhCwmkq/y0d/upbWhkpK8bJxLNjfV0
      9QyiVSmYikRo2bzpDt/BnUdWgPsEg8Ew+4uYRFCq0SohmBDmXJkFFIIAghJI4XU5URiyEJgd
      /oiiiCRJNz2kSSYXR2Op1atf29i7dy9Hjhy5qfpuBVkB7jFi8Th/ePsDfvjME4ts93bLJDMz
      LszZBShTbmxJDdvrCujq7CI9IxO9MkFXVycFJTVE0zMwpgnYXAEKsk3A7LqEINyc379KdevN
      SxCE2yq/WmQFuIdwzLh5/rd/xGQ0MG21U1pcuPC3/KJS8otKAcjN+mxos7klc+H3gpK5X8yf
      jwW4O4GsAPcQqVSK5oaNbG6sXdT47wVeeuklXnrppVWf/0//9E9s3rz5hufJCnAPUZify1OP
      P3y3xVgXxsbGbsoE6/Wuzs9dVoB7jIHOdkSlwKDFz9cf2XO3xfncc0MFiEQiHDx4kKeeeorL
      ly8DoNVqUavV+Hw+du3aBcCHH35IdnY25eXljI+P093dzRNPPMEnn3zCt771LWA2VeLExASR
      SIT8/Hy8Xi8Gg4FYLIbVauWxxx5Do9GsWvihoSFmZmYwGo00NTVx9uxZkskktbW1jIyM4HQ6
      KS4uJhKJkJaWxtatW7FYLFgsFiYnJ8nLyyORSFBdXY3VasXhcPClL30JnW5pkqdbZWpqCovF
      QjKZZNeuXbjd7oVncvHiRURRpKioiK6uLmpqavB4PGzbtnyendVw9tw5HKEkRoMGkBXgRtxw
      IUyn01FfXw9AOBxmw4YNxGIxGhsb0Wq1C+dlZWWh0WgQRZHi4mIeeOABsrKyqKioWDgnLy8P
      jUZDcXExBQUFpKWlUVBQQGtrK5Ik3bTHYU1NDRkZGQvlzGYz6enp2O12jEYj1dXVpKenYzAY
      8Pv9wKybgFarZd++fQDs27ePyclJsrKyKC0tXXRPa0F+fj4ajYbCwtkx+dXPxO12o9Vqcblc
      5OXlMTw8TDweZ3z81iLoAL793e/w1JNP8viXH1sL8e8Z9u/fjyAIS35u2OICgQB9fX10d3ej
      UqkYGhpCoVDQ2dlJf38/breb0dFRFAoFMzMzSJJEX18ftbW1OBwO+vv7GRwcZGBggJMnT+L3
      +1EoFBw6dIhkMkkqleL8+fOkpaURiawyoeMc3d3dBINBEokEAwMDGI1GgsEg6enpdHR0EI/H
      SU9PJxqNkp+fz8DAAKlUCo/HQ1ZWFoIgcPz4cUpKSjh27NiCPGvJxx9/TDQaRalU0t/fv+iZ
      zMur1WrJzMyksbERv99PMHjrAZLvvP4HLl08z8WugTW8i3sY6TZxOp1SNBq94XlTU1O3W9WK
      JJNJyWq13lUZPg90Xjgl/bf/51npX373b9Lv335/za6bTCYlSZKkffv2ScCqf67lZsru27dv
      Udn/9J/+002V/+STTxaVX0n2254E5+TkrOq84uLi261qRZRKJQUFBXdVhs8DTa27CEsaHti2
      jQsXL95tcb4QyFagewjbWD8vvfgiPV1dRCQt21bwC5L5DNkb9B6ioKKW//PnP0WlVGEyGe+2
      OF8IZAW4x/j03GXyykpxWlfeFUXmM2QFuMf41ve/S7pWywNtO1Y8xzY1Tv/gCCIwPTFGJJ5E
      TMYZGZtAYtbcLaXiBEOxOyb33UKeA9xjvP3aH4inFxHz2Ni9Y/k5gCcQob6+DttoPwpzMf29
      PSgRqa4up3dgDLWUIBkLUdlw78cDyD3APcbWTc3MTI9hMK9sFdNpBC6cPcuEP0lBphGVUomg
      UqE3ZiImQnhdVqKkkaYSFuIBksnkLcUDXP1zM0iStKisKIo3VT6VSi0qv5Lscg9wLyElGRqb
      pCDLTH1D0/LniDGicQkQqMjP4FJHFxqVZi4eoANTZiFalYY0depzFQ9ws14CSqVyUfmVZJcV
      4B5i8MLHUNDC93ds5J//1/9mc92/X3qSQktdfd3Cf/MWggCuJnf9hPycISvAPURKUDPWfZ4/
      jLfjj39xd225k8gKcA9Rt+0h6m7dkfS+ZJECyLlBPz98nnKD3sssUgCTyXS35JCRuSvIZlCZ
      +xpZAWTua2QFkLmvkRVA5r5GVgCZ+xp5HUAGgKG+LqJJEaO5gETIh1aZRJ9XSU562t0WbV2R
      ewAZAKIpaGpqIehz4nVZcUeEe77xg6wAMvOkUoSDHpQaI+bsQrRShFBsbTNkfB6Rh0AyADQ0
      1DM2ZaNuQzmRcBi9TksgFAPtvb0aLSuADAAKlYaqijKABRcMk1G/EA8A0NLSclN++dfmWNqz
      Z/WZ6lpaWhaVLy0tvanyJpNpUfmVZJf3CJO5ITfaJlWSpBX97W+n7J0oLyuAzA25USNbr7J3
      orw8CZa5IYIgYJkco7+/n2ji5kIT5xuf3TKBw7VCynIxQSgcI+x1Eb5m3i0IAl7XDEkJQqHl
      U0YGQyEAXDOuFeufJx4J4gt+loJTngPIrIpQOEFtbS2psBdvwkQs6EKlVOByecjNSsfmdFNR
      U8vEQBdoTdSU5dM/NEZBSQWGlIuZuJ4Sg0DY52bcYqeorIpENIgqmSIhBLjU6aCxNAO7xUV+
      ppmSwryFuu3WKeyeMMmoj7qN1QwMjZNdUIQiGcITiDI2NEjDpq1YRgewO7LZWF+HaoWP/vik
      hUQqhammgr7BMbkHkFkdXped/v5+wkEv3kgKh8OJbWqcwtIKbE4X9XUbGBkcRKHRkk6cTzt7
      QKlkoL8PrbkYVdjGxLSdMYud+vo6pseGcbndeB1OdGYzxSUV6DQqKqo3EA4u7ikUagOqVJi4
      CMMjY2ysr8dpm2ZsbILKqkoKiksoLsglIyuXUrOAM7TyfThsU1gsduLRAOFYSlYAmZtDUGux
      jPbj9gbQ6EyYdGqUpOjt7cVkzsZhmWLaG6G8IBcpJVJeXk48EkQUVEQiYQxqBT29vWgM6QS9
      LiYtNlDq8DnHicRTMDdkmZycJBX2YpmZDdKqqqlgdGSMTJOB3t4eUGjIyMxEJQiopARTNicC
      wlzxOJOTdiYnJxfJHvVOU7yxjT3bNjJmj2PUq+VJsMzaMjjYz4YNtXdbjFUjK4DMfY08BJK5
      r5EVQOa+RlYAmfsaWQFk7msWLYSFQqHbyucoI/NFY1FrV6lUa75N6BedZDIpfxQ+h6RSKRKJ
      BKIootVqr+vwdj3kN3sDYrEYCoXiprMTy9wcyWSSoaEhYtEoRqORqurqZZ3YRFFEFEUSiQSR
      SAS1Wk0ymbxlBVi0DhCLxeQe4BrcbjcajQadTnfLD1lmZSRJwma18sEf/0iZ2Yxp7mtuiUTY
      tGcPZVVVi86Nx+MLX39BmN2/IC0tDZ1Od0v1yz3ADVAqlTe9MYTM6pAkiQsnTjA8OMjjDQ2k
      qdWo5j4ytUDH+fMUlpaiUCiQJGlho475DTPm38vtuEvLCnADlEolarUahUJBKpVCEIQ1Hw71
      9/WRX1CAXq9Ho9Gs6bU/r0SjUY6+8w6KUIjW3FxC8TjGtNkg/Eg8jjMQILehgVgstjDOj0Qi
      aDSaRZFeWq32tt6HPLC9AaIoEolEiMVihEKhNc+gPToyQndnJ4IgEI1GVzwvEokQ8PuxWa1r
      Wv/dQJIkzpw6hTcQIMtgQD331XcFZ/39O6amuDwzQ1lt7cIXPxwOI4rikmcUi8WWhF7eDHIP
      cAPmrUCRSASFQoHRePv77844nVy+cIHcnBwutrcjiiLvvf465VVV7HrooYXzxsfHKS4uRqVS
      IQgCvZ2dGN1udHv3kpGRcdty3C0G+vsxOJ0oDQbaJybIM5mIiCKtpaUAlGRl0bJjx4KVB1i3
      YajcA6yCZDKJWq1Gr9evaiIsSRKJRIJ4PI4kSQs/8ygUCvoHBtAaDBiNRoRUij2PPMLO/fsX
      Xae8vHzBBKvVanFNTzNitxPw+9f0/u4kDoeD0ZERzHo9+ZKEMS+PiFpNU1ERBRkZOPx+HAYD
      Or2eeDy+7vLIVqAb4Ha7gdkGqNfrbxiADRCPxxFFkXg8Tnp6+rJKc7VCBPx+TOnpi67tdDgw
      GI0LGRokSeKVF1+kwWTCnUzy8He/+4Uyzc5bcIaHhkiEQiRHR6nOy+MPn37K9qoqdGo1kUSC
      kVCIx7/zHdLS0vB4PKu6tk6nu2Ur0BfnCd5l5och10MQBILBIIlEAq1WS0ZGxoo9hiAICz/p
      GRlLrp2Tm7vopQqCwA9+8hOSJhMS8Opzz+Hz+W77vtYbSZKIxWJYLRYOvvwyRqOR0poaJiMR
      LB4P6QYD3dPTCILAO+3tfPnpp9FoNASDy8f/rjWyAqyS1VhnBEFAq9UiCMJtZzOYV46rUSgU
      tD32GFmVlWwuKqK7vf22JoDrjSRJDA8NceTAAfILClCoVPSdPMmZP/2JtOxszk9M4A+H2VRS
      QpHZzI7aWgRBwOfz3ZHhD8iT4FWTSqVu6BIhCMKidYP5ucPtEAqFMBgMCwolCALVtbX4srMh
      GPzcDoNSqRQjw8P0trdj1OuxWq1s3b+fGbsdj9NJZk4OpRUVnPjoI3otFhKiSMmWLej1ehQK
      BYlE4o4o9+fz6X3OEARh1Tulz68bzP/cDE67nYErVxYdm58DzDidAJw4cQIEgWh/PyNXrtDd
      3r7q4YIoivjv0AS6+/Rpuo8do7SmhprmZtJNJpKJBMb0dOKxGAqgq7OT7aWl5GVkYAuFKCsv
      X1hnudmd4W8VuQdYBYIgoFarVzWkuRW/IafDwUR7O1Gfj6KmxTu82+12CgoKyMnNpb+vj+nh
      YUSrlS35+Zg0GoyBAEffeYev/eAHS+STJInpyUnsk5MUlpVRWFKCwWC4KdluhaGhITo6OvCl
      UhgGBgiazQyrVHR0dJCpUKDPz2d6aAiP10t861YiPh9hr3fWIja3Q/y8wSESiaxrTyBbgW6A
      2+1GEAR0Ot3C+H4tmZmZwXnuHDGdjuq2tiU7dU5PTWEwGhm7eJHsRALzMpaobrebB77xjWUV
      4MiBA1SpVNiCQUJ6PcVlZTRs2rSm93AtkiQR8Pt5/8ABFIEAKrWaDJ0ORVERrrExnD4fZYWF
      VOl0uONxSo1GJpRKdj/66JJrpVKpG072b8cKJPcAq2C+W17rxg8w0teH3+9n10MPLdkXOBQK
      YUpP5w+//z3PbNiAepmv92QggO86Fqqm7dsZGR6m8cEH0Wg0hELXSZqzRlw5cwaVILB73z68
      Dgfm7Gxyi4rQaDR4vV56uruJRSKMRKMU5OXhVCgoLSlZ9lpKpRKNRrNuk2JZAW7A/AtYD0/Q
      RCKBY2CAmh07Fhq/x+PB7/WSEkVycnPpPnaM1pycZetvn5rCHgxi0GrpOHQI8vJIRKNo4nFK
      mprIzM4mKysL2/Q0g93dbNu165a/lDdDyuulxmik/eRJqvbsIa+wkD+99hot27fz6eHDRESR
      h8vLGVarmRgawpyZiWNqCkGSKL3K+3MelUolK8DdYv7Lvx4K0N/bS2FuLrX19QvHJvr6CDmd
      OFMpxFiMsrQ0NubmLlu+JieHzVd9OaMeD8lUCmNaGqODg6SbzbM29ZkZTKJI99mzFG3cSGZW
      1prfyzzBYBB9PM6k349OrcZy+jTnAgFMKhVOm43yzEzG3G76YzEKc3LwplIUq1S83tlJMBKh
      sKxsibVNqVQumJbXGtkKdAMUCsWCS8PNIEkSExMTWK3WFcsGvV5CoRCJRGL2/8EgGq+XkN+P
      yu2mTKFg5Drl570n50lTqz/zqAyHOX7gAO2HDpGVSFBtNFKeSDBw8iQT4+MryjU6MsKpTz5Z
      9n6so6NYp6eva6FJS0sjajYTzclh0uOhrrCQRzZsoDInB3NGBqYNG1AbjeRkZeGPRCg0mTDr
      9fxZWxsNZjMvPP/8EquWIAhLhodrhTwJvgHRaBRBENBoNKueAzidTj54/31CMzOEo1G27tjB
      3v37l1iHUqkU3R0deL1e6puaSNNqmfj4YyKAURAoyswkFI1iSEtDcZPzj0g8jlatXlJOkiRC
      sRiJVAqhsZHcvDy8Hg9ulwuD0YgpPX1JgIkoipx7+WWKL1xAAKbLysioqoLSUorr6jCZTCST
      SXq7u4lHo6RnZVFeXs7hd95BCgTYXl6OXqOhd2YGbXU1Ibsdld9P1qZN9Jw4gVGpJJZK0VRU
      hNXr5fzkJH/+s58tGATmvUBjsdiySqvX60lLu7X9zGQFuAE+n4/0a/x0rsfw8DDvHziAWpKo
      q6hAodUiud2oMjKo3bmTzOxsvF4vI4OD5BcVkYjHcTscREZHUZtMxGMx0gQBRyDA1qIi0tdx
      zD5ot6PVaLAFg+QYjRQZjYwHg5Ru305efj4wO0/peOcdao8d49pVDQk4WVSEbssWnOPjNBcV
      oVGrZ10cTCasiQTqaJQ8g4E+mw1XMEh2VRXesTGyjUbckkTjpk24uruJZmURdbl4tKqKP12+
      zPYnnmDDhg2z9cw5F4ZCoWUVQLYCrSM30/glSeLEiRNkDw+zNxbD3tREutmMVqkk02Bg5vJl
      wtXVnDtxguq6OkLt7QSjUapzc1GVlCAIAq5gkGAySa7RyNjMDC1zLsLrwYa5Rl6WmblwzChJ
      TJ86RXzzZoorK0kkEqSNjS1p/AACYNbrqdPrEevqFnqbzLnhSn4yyVGvlzGfD4Mo0lRbSyiV
      wq9UsqW8nEAoxJX2duqys8lpbeX8J59wdnKSLzc1ceSTT8jMzCQnJwdBEBZco699FwaD4bZW
      2+U5wA0QBIG+3l4mJye5cvkysVhsxXNjsRhRtxtJp2NckpCcThQKBe5QiAvT0/hDIUZ7esjW
      68n0eikxm6krKEA9N8kDCMViDLtcVGdlXbfxx6/ylV9LJEAQRUZPn+bKhx8Sj8eZLi/nzRuM
      DJYbomlUKh6trubrtbUUmc00mEy0mc08WldHukZDfno6JUYj0/E4efn57Pva1yjLyyOWSKBN
      JHjt5ZcXuZVc61Ku1WpvOyJM7gFugCRJHD92DINSSWNlJUP9/TS2tCx77qWLF9kYjaL3eLCY
      zZhzcqgwGgkKAgajkaDZjNnhoLKgYMVepSw7m7Ls7OvKFE8keH90FJ0k8Wjt2mC9TIsAACAA
      SURBVGVijsbj2AMB1KWlZPj9zEgSqqEhqo8fZ8NtXFelVNJ0lbXKMKdM4243/Q4HTZs2EY/F
      uPTJJxQpFGgMBlxAc2vrwnO6OhRSEARMJtOa+EHJPcANEASBLz/2GNk5OcTS0th4lcnyavr7
      +xnp7qbAbmcjkL5hA8lQiJ7hYcKiSIlWS7rHQ3l29m0vqKmUSnSSRMZtOtpdS5pGgyEzk517
      91L98MNodToKKypI/Pzn2OaGS2tFPJnEp9FQUVOD025naHAQpdnMaCqFKxgkPZWivrFx4XyN
      RrPQ4NVq9YJp9HaRe4BVUFlZSWVl5Yp/Hx0d5Y1XX2VTTQ1FoRCDmzaRv20bXpsNl99PuV6P
      KS0N0y1aKq5FoVDc9pd/yu9HSiax+f20VVSQEkUmYjG0OTnA7Nh65549JBIJxp97jq12+0LZ
      xNxQRH0bDbDT7Wbb44+j0+m4cvkykWgUfTSKISuLuE6H32ZbFPapUChQq9XEYrE1TRwgK8Bt
      YLVaUSgUOBwO8jMzUSmVBBQK1LEYPQMDlGVnI4oixXfAAW21JJJJ7PE4JXv3cv7YMQCGw2Hc
      4TD7nnxy4SubSCRm5zSRCAOiiEmSKBMEwsD7SiUWrZZdgoDF7aY0FkM3lznjWiwuF6NOJ7vr
      6j6TIZWiZPPmBce8La2tWK1W/A4H2ZJEh9vN3ocfJh6LLSyKzftjzXvbrhWyAtwCkiTR29OD
      w+Fg3/79SJJEcHISq91OvijSnkzSum0b//zf/zslWVk8so6WnNXgjUbxZWYiKZWEolE0RiM+
      j4esRIJUfT0tra3A4vw68+7cer2eJ//hH7h88CDT7e2IkkTJY4/xnQcfRBAEPG43f/rDH1BE
      ozz9wANL6h51OhkMBtl91TFJkgjNhZrOEwmH0Wu1pKnVKNxuopOTXLbZ2H1VnLRCobhle/9K
      yHOAWyCZTHLg9deJDg4CUFBQQHpZGZ54HJsgECwsxDk8zKbt22fHqndR1nA8jlhZSeO2bTRt
      2cL2nTup2riRUEcHGRoNhUVFy0afwWwqlmQyiU6no+XxxwmWl2OrrWXT5s2oVCqUSiU5ubl8
      9TvfoX1qirG5mIWr2V1Xx0+2bVt0TKNSoXY46D55kthcmhOn04l9zsLWmpdHtUaDa2CAZDK5
      Dk/lM2QFuAW6u7uJxeNEXS68Xi+iKBIKhRgZHubCvn20NDfz3scfo1arKTMa6Z6YuOE148kk
      Qw4HvU4nPdPT+MJhUmtg5jwxOYkpO5twOLxwzGqxUJSRgVMU0ev1uFxL99eF2QUmtVrNpQsX
      eOuNN2h5/HGe/t73yDCbF52Xl5fH17/xDY7OfRBWQ2l6OuWiyOjRo7SfOgXJJLlzY/t5hWyr
      qODw22+va3ikvBJ8k4iiyO9+9zuCgcCCp2ggGCQ8M0OuwUCxSkUgFiOcno7C4eDC1BRP795N
      bVnZEt+d+TBHSZL4ZHiYXS0taNVqppxOYvE4qnicimUc1+LJJJplwjOn/H5CJhOGUIiSufxF
      0x4PtlCIVFYWDz/22Oyx6Wkc586Rv307RcXFy96jy+UikUhgs1qprKrCbDZf1+oyPTXFwQMH
      qNBoeHDjxpt6pv1OJx6djh3L5FwKx+P0iSJ7l4kVWAvkHuAmUSgUVFdXU1tbS9jvZ3R0lIce
      eoiZUIi2xx/njM3GwFyEU5bBwA937qRvaor3LlzAeVU4Yr/NRo/HQ5fNRo/dTnFuLtq5yV1J
      bi7VxcUodDr6Z2bwRyJE4nF6rVacfj+XJibomppixOFAlCSiiQS+cJiQSsWGzZvxX+U4VpyZ
      SYbRSOKqHkAQBFSVlcs2foCRkRFCwSC5ublsbW0lMzPzhibH4pISfvIXf8Gwx8PEzMxNPdPa
      3FwyrolTsPt8jM3MMBGJ4FvjbHxXI/cAt0g0GiUUDBJPJDhy5AifHDpEVXY2UlYWsUQCjVpN
      aThMenU1qYwM1IEAdUolyuxscoxG+v1+Gpcxrf7mnXd4pLWViqsWjk739iIlEuyursbh85Ft
      Ms32HKLIiN2OWqViNBymeccOsrOziUaj9J4/T0YsRkV2Nr2BALZgkKe+9z0EQcBisVBYWLgu
      AT6jw8O8/MILPGI0rmhhkSQJRU4OCYMBtV5PXVbWIll6LRaG/H6qWlpQiiKWjg4qd++mubl5
      zeVVPvvss8/O/2c1mQ9kZlGpVGg0GmKxGBUVFZw6c4a8ykosVivp6ekkk0mKWlpQGAz0dHSQ
      lUoxo1azqaQEpVLJsN2OLZXCoFSSEsWFIc3WujrM6ekL9fRMT5NTVUV5QwMzo6MUZmaSTCZ5
      48QJmquqyDaZMBsMuINB4goFuXl5qFQqcoqKsPh8aGIxTA0NRBMJSkpKsFqtZGZmrlsS3sys
      LELd3ewcH6cwEKBguZ9gkHSHg0mfj7FEgmgySeGczT8lihw/fZrSggIGbDbyCgtJLyoiTasl
      d4W4iNtBbu23gMflwjE5iaTREIpEKCwsxGw2s2/fPn7zm9/w8MMP8+abb+Lz+bCMj/N3f//3
      jA8NIcRidAwPk67Tkd/QwPjAAFdmZihvbmbCasWoUlGam4skSbT39pKXl0daURGlFRWIooi9
      sJBBm40as5lv7p41LEYTCS4Gg2x76KFFjdpus6F1Okk2NBANhdCoVJw8dYp9+/ateyqVilTq
      hmNrHbDd7+dtQcARDtOnVhMYHSV7epqNpaVMCAKbN21i89at6yqvrAA3iSiK/Om99/D295Oj
      VBJJJhGefpp9e/cyMjjIQyUlvP3HP6LW6aipqcHv8zHR0YHK7UZVVcVRqxVRoyE1PMyTzzzD
      aF8f3kAAXyzG64cP82hbG0cvXmT/o4/y7oUL/Pgv/gKYnXvU1NTgz8tj2OkkEQohxGKoMjLY
      tXkz8FmmZJvNRjKZpHTvXvILCnjrzTepra2lvqHhzuQRuk4dJ2IxqiSJ4rQ0lEBzJEIgHkd5
      +jS7RJFLWi2ZTzzBzvr6dRmiXYusANchGo3isNspLStbeBkKhYLi9HRUbjcZRiP1TzxBflER
      ExMT6AwGHPn5bCkvp6e/n5MnT/KgXk/18DD/eOoU1WVlZMXjuBQKtGlpFBUVEQ+HScbjVG3b
      RnpGBmPj44TmVmH/6mc/WyKTRqNhdHSUpqYmCgoKFo6Hw2EuXLiA0WhErVaTlpZGfkEBFy9e
      RKvRUDK30cSdQKytJTA4iGmZBjyTkUGWz0cxs5Px2kQCEgkk4EWdjh8/+yy6m4j+isViBINB
      sm/gQLgS8hzgOqhUKgxG45KMELklJYTUagK5uWQWFOBxuZhxuYjF44TCYZqam3n0y1/G6/WS
      sXEjI8kk0y4XmaWluIAsjYbv79rF4cOH8VsstKSnc+DkSWa8XvRpaTQ3NeH3+TAaDJiumg8A
      HD16lOzsbLq7u6m7yr1ArVaTSqWora3l8OHDeDweLBYL4+Pj2Gw29u7bd6ceG1kVFYxcukTO
      VZaneeqTSfKWaWMCYK+qounBB2+qrvkcQreKbAa9AVcnxZ3fHKOvtxeb241Zr6e4qIi62loM
      Oh3uyUm2NjSwdetWPA4HbVu3snvPHuoeeAC1wcDIyAg+jwdRr8cTCoHBQCI7m2QySTSVoqam
      huHRUTZWV1NhNuOYnFwiT2NjI+Pj49TU1Cz52/wH7IknniAaieD3+6msrOQ73/3u+j6ka1Cp
      VOT+5V/yaVUV7TodHknCdp3hTFKSGGhr47G/+qs7KOUscg+wSuZ3JwwGgxw5fBi3388DO3bQ
      29dHT28v+/buRQgEaMzP582332ZjVhZ2q5U33n0Xt9uNx+2mfsMGHt+7l7R4nDODg9RmZpIH
      5JrNOKNRPm1vp662lsKCAvSiiFKSOHbuHJq51OypVAq3283OnTvJy8tbIqNSqWRycpL6+no0
      Wi0PP/wwFRUVa7Kpx81iNBpJ5uRwwecjc98+NNu2MWy1oo7HCYsi4yUl9Or1JJubsYTD5D7z
      DFnrmK1iJWQFuAmmp6YYHhnB6/HwpYceIj8vj57eXiLRKNXV1QQdDqxWK2llZYTtdoYnJ6lq
      amJsfJya6mr2bN6M0WAgLIrEUincojibbkUUSUYikJGBz+ejUKOhKCeHDIOBKauV3q4u3jpw
      APfkJBogDmReFcY4z0cffYTJZEKj0aBWq8mYS7ueSqWIxWJr6kV5I+bTvtssFmKJBKU5ORyZ
      mOC030+yrY19P//5bM6glhY8osiFo0cJKxQUzfkm3SlkBVgl81FIDoeDHdu20TcwQDAUYuvm
      zdTU1KBRqxm3WNApldjHx9m1aRN2n4+ByUkyMzJobGwkFI3S2dWFPRikta6OI8ePM+N2k1NW
      RkFLC2Xl5QQ8HgozMnB7PJzs7eWRLVvYUlvL+Nw8IyKK6A0GdDodAwMDFBQU4Pf7+fjjj8nL
      y2NgYICtW7eSPRd4M68AV2e1WC629kbcyo6MCoWC/MJChsfGOHX5Miq9HkNODq5AgAceeGBh
      90dvPM6p9nbsdjslJSWY5hb67gSyAtwE586e5cqVK0xOTaFWq7E5HLRfuUJebi59/f0Eo1Fy
      KivJKSvD6nbjDwZJS08nFA6Tn59PMBxGKwj8X88+y7+9/TaxaJS6hgaSkQh7Hn2U7OxscvLy
      GBoepshsxu31Ul1SwrTLRV5VFRa7nazsbAYHBjh95gw2mw2v14vZbGbLli1cuXKF9PR0mpub
      F03cr42eupXGFY1GGRocJBGPL5mYX4+0tDQ2bNyIw+nE5XKhVCqJRqPs3LmTt19/HbvDgcSs
      gh2bi0+4fPkytbW1HDp0iGQySW5u7rophKwANyAcDtPV1UVubi7nz5/H43KRmZlJMBCgsqqK
      aCyGBNgdDoqLizl9+jTBYJBQIkFCEPD5/ej0esRUiunpad44eBCv14tarSYYDjPj9fL9n/50
      YUxvMBiIiyK5Gg2VRUWMu1wUt7RQVVVFQ0MDTocDgdl3VVZWRnNzMyUlJRiNRjo7O0kkEjQ3
      N695g1Gr1eTMpWi82VVkQRCoqalhenoay/g4j23fzoH330et0+F0Otm3bx8ul4u0tDREUcRk
      MnH58mUaGhro6+ujrq5u3Uy4cmu/AWq1mk8++YTy8nJ6enrISE+nuKQEU3o6r732GiqViry8
      PKLRKGfPnl1IpGu328nJzl7IKm2xWPDPOc9djSAIi8yZABWVlYycOzebK3PLloXQQIVCwY6d
      O/n1r36FXqdjYnycyspKNmzYgCAIGAwG+vv7121Hxfk6bgWlUsm3vvUtJEnCYrFgOXYMU1YW
      gUCAF198kZ///Oc8NLdD5nw2vv/4H/8jDXN7Ba9XZjjZDHoD1Go1f/d3f4fZbCY9PZ2e3l4O
      HDjA8PAweXl5BAIBpiYnyUhP54mvfY3srCz2799Pa2srBQUFhEMhuru7ycnJYeOGDXz7299e
      8G9PpVJ8/etfX/J1S0tLQ9Tp8M65XM8zMzNDVlYWGWYzZRUVqDUacnNzUavVJJNJTCYTwWCQ
      c+fO3dFndDMIgkBxcTE/+9nPMBgMDA8PEwqFuHDhAs7paV577jnOnDjBxU8/RRAEQqHQum4e
      Lg+BVsH8ZHLbtm0MDQ2xfft2Dh8+jJhK4fZ4KMjPR6FUcuXKFTIzM4lFo1y4cIFwKERubi4K
      pZLSkhIGh4bQqFTU1tYiKBT8zd/8Dd9dZrfHVCqF0Wzm+PnzjIyO0jDnwhCNRtHpdAwNDrJv
      716am5spLy/Hbrfz0eHDbGtrw+f1olEqqV5mneDzhNFopLa2lrKyMmw2G5MTE+jPncNis1Fe
      W8vA6CjRaBRJkhBFkbKysnUZBsnu0DdJd3c3vb29ZKSno1SpKCgooKCggPPnztHd04PBYKCq
      qgqbzUZdXR3hcJizZ85QVlaG1+PBnJVFIpGgqqqKPXv2LFvHhx9+SFFREbm5uXi9XjZu3Lgw
      pv/4yBEcDgcdHR38/T/8w+wm2+++i9PhYMeuXbS1tTE6OkpNTc26ZLReD5LJJJFwmFf/y39h
      x/e+x8Svf024rQ17Xx8P/eAHXLp0CUUqxZ/95CdrrgRyD3CT5ObmUldXR3VNDVVVVeTObWfq
      nJlhcnKS7q4u9Ho9LS0tTE9Pk5OTw8TEBCMjI7Ru28bY2Bgmk4n6+voVF36ys7MpKioiPT19
      ITXgPAajEZfDQSAYRG8wMDQwgNPpRDeX0Laru5t4PM7k5OS6ZFFYKxKJBNY513Gr1cqbb72F
      w2bDNDiIoFCQp1KxL5Gg8+OP0Xm9NPp8XEkkKC4tXdM2KvcAa4AkSUSjUZ7/5S/Jy8ujuLSU
      ZDJJMBikr6+PUCiE2WxGrVRS19BAVVUVVXMbQXR1ddHQ0LDoa30jm/vFixdJEwTGLRYys7K4
      dPkySoWCnOxslCoVgkKBy+UiGg5TU1WFwWgkEA6zefNmXC4XhYWFt+w8tlZIkoTH4yErK4ve
      3l66u7vxTE2xOR7H53bz4DXJbkVJwi+KjKvVGJqayGpspHDDhtngmtvoFeQeYA2Y30SvqLiY
      vv5+Nm7cSHp6OnV1ddTU1NDb28tDDz3E0PAw3/jGNygoKFhYBGpvb6ekpGTRV3qlLA3zFBUV
      EUskGBsdpaioiIKCAnbs3Lmw4PXAAw+wYcMG4okE+QUFdHV0MON2EwqFCAQCiKJIfn4+oihy
      +vRpzp07R3Z2NgaD4Y4tQM3n+YHZBMQD77zDPqMRTyDAJoViSdItQRBIUygokCSy7HaSnZ0M
      ezzk36bbtNwDrCGSJHGlvZ3hkRGysrJoaGjAZrXSfuECnX19/OhHP6K9vR2tVstTTz21yNHu
      VsbrsVgMq9XKjNNJKBzGbrMxbbGQnZ3Nl770JfLy8gjNWaHisRgarRav18uePXvQ6/X89V//
      NS+++CIwO+w6dOgQrXM5gu40g52dvPPiiziVSpqDQRry82m4qmE7w2Eu5OdTabNRN2eKHW1u
      pv7pp2+rXlkB1pB4PM5rr71GS0sL58+fJxGNYjQaCUUibNq8mbfeeova2lrS0tIoKSlh27Zt
      6HS6Nf3qxuNxAoEAAwMDiKkUyVSKpqYmurq62Lt3L6lUimQyyYULF5ZMwh977DEOHjx4V+YM
      x48fp6OjA5VKxejICDsKCzF5PGxTKEgTBIZ9Pvrb2si+fJntBgPDmZnU/M3f3HZ7ldcB1pDR
      0VHq6+q4dOkSpaWlKJRKpqenmZiY4Py5c9RUV5Obm4vRYCBNq2VmLnvCWqY57+npwWazkZeb
      S3NzMwa9nt7eXqoqKxkfH0elUpGWlobVal1S1mq1cuTIkRXzBK0n9fX1uN1ukskk1qkpctva
      mCkp4fKcMlZnZPClnh62zy/EVVevycdaVoA1JDMzk9ToKBGLhanOTvB4MJpMfOuZZzCbzXzr
      mWf42te+xtT0NGfOnqW4uJiBgQHeeustEonEba3ger1eenp6yDSbKS0pWQgg37hxIxs3bCAj
      IwOP272wv8GePXuWTIS/8pWvEIlEFvYsu5Pk5OTwt3/7t7S0tLBz40amenpQJRKE0tMJz30g
      tHPz05QkobkqGu52kBVgDcnLy2MyFsNUUsKnPT0YS0vJU6l46YUXqK6uJnMuo0NuTg4V5eUo
      FAoqKytpbm5eNB+4WSYnJ7FaLJQUFy+4STudTj48fJj+/v6FfJrV1dV0dHQgSRL5+fkcOnSI
      xx57jJaWFv7xH/+R//yf/zPf/OY3l401WG8EQSAnJ4eMjAzSysvRDQ8TGxkhkpvL8atyBtlF
      kYGyMipW2KPhZpFNPmtMfUMDJdEogs9HyuEgLgj8xV/+Jd1dXezavRu1Wk19fT35c5tkaDQa
      Nt5kJrVrsVgs1F/jTxSY22nRd1UyLoCKiooF82Nrayvvvfce4lxcwtVxz3eLyspKDj7/PE+p
      1YQSCY6NjxPW6XClUsQzMtD/4AdsKSxcs/pkBVhjCisrufD++6SpVPhjMRTZ2Zw9c4Y9e/cu
      NLCmNU7wVFhYSDgcXuQwVlVZSXFR0ZJxslajITm30wrMNva72eCvxef18rDRiD6ZRK9U8mWb
      jQsKBSaTibHCQirXsPGDPARac8xmM/nV1Yh6PVVtbfjcbra2ttLQ0LBudZaWlmJ3OIDZCfX4
      +DhjY2M4nE5SqdSiuYUoikjrsLfYWhEKhdAnEhwTRY6JIuPRKAPxOGNpaVR+/etrXp+sAOuA
      KTcXg17PxMQE33z6adra2tZ9gSkWjc5uzG2zUd/QQMumTZSUlPDe++8vygw9MTm5JLszzE6i
      HXNKdDeR/H6kuWclAFFRRFVTg/5b31rYN3gtkdcB7hFWcp9wuVxMTkyQl5dHPJEgEAgsm2NT
      kiReeeUV9u7dS1lZ2R2ReTkZjv/615T29lI8dx9+SSLy7/89ZdXV61KnPAe4R1iph8nOziYj
      I4Ouri7i8fiKK72BQIDi4mKicxtW3C18gQBbgJgk0ZmXR9n3v09pefm61ScPge4DVCoVFRUV
      jI6MLGw1ejXxeJyXXnqJYDC4sDv73SCRSNBltaIVBCaVSkq+/31KKyrWdfgo9wD3CWazmW88
      +eSS6KpUKkVnZyf19fXsvcpSdTdwOByzC4JKJbHGRhrW8cs/j9wD3EfornExniccDrN79+67
      Pv9zzcxQoVKRkiS0eXlyctz7kfltk+4UgiDw4NyOjzAbnXW3XOIdTieZySQBpZKsqzbJXk/k
      HuBzxp0egoRCoUWb0N3NeJCcnBy6Uiku5eZSUF6+EA+8nsgKcJ9jMplQq9XrlkrlZmhoaCBi
      NnPO4cAxOYkoitddpV4LmeV1AJnPFV6vl/ffe4+S/Hzadu9e842xr0VWAJn7GnkIJHNfIyuA
      zH3Noin/fB55GZn7hUVzABmZ+w15CCRzX7OmCrCco5WMzOcZuQeQua+RFUDmvua6jh+vvPAL
      4oYCxHCQf/fTP79TMsnI3DGu7/kkgXNyiKKKqzzzxBi9fSN4PX4qKwuwuQMolVqa6+9eIIWM
      zK1yXQUw5pXy9z/9Gu8cPPjZQYWWsuJcgrEkM54Am5ua6OruXthIWraqynyRWFEB2s8e48Tx
      43hcMzS2XpVENRWhZ9hG29Zmpob7mPGHSKWkhXTfX5RdSWRk4DoKsHnHPpRKJVf6x/B4PQvH
      JUlBukFNf/8wNbW1WMfHqK2vvyPCysisNde1Ap261ENt3QasY4MLxwSVltraWmprq1EiUFJe
      SZpa/urLfDG5rgJ85dEvo5XiVNWtbSo/GZnPCysOgS4dO8S53mFKSsuJCfIKr8y9hRhPkAyG
      V+4BLvSP8PjuTXxyYZAH29YmFbXMF5ezZ88u+nceh8PB+fPnl3WDOXr0KACDg4N89NFH9PX1
      LSkfCoXo6OhYH6EBMZkk4Q0QmbYT6B/Fe7GbmeOf4jpxAd/lnpV7gK9++RGm7C6+89gO3F4f
      BbnLb+kpc38wv2uMy+Xi4MGDGAwGdDodsViMgYEBEokE4XCYaDTKhg0buHLlCn6/n/379+Pz
      +Ugmk1RVVfE//+f/xGQykUql6OjooKWlhWPHjhGPx7Hb7ZhMJqanp6mpqaGtrW1VskmShBiL
      kwpFSIUjJOf+TYWjiLH4dcuuqAAllRtAraOkpIRpi+UmHpXMvYwkSZhMJvbv37/whS8vL2f7
      9u28+uqrlJaW4nA4aGpqWki2u3XrVuLxOAcOHKCxsZHGxkbeeOMNwuEwWVlZbN68GYfDgU6n
      Q61Ws2nTJnp7e2+oAKlIFH/nAMlQBJbJHiGJIqlQhLjHR9ztI+kLEPcGSHj9JLx+UuHIygpg
      t0z8/+2dyZMcx3WHv9p637sHGAww08PBRnBAEqYccJi2EBIvOshSOBgh2Qf7YvsP4UkX2eHw
      dvDFjrBlK3QwbSvCloOULYZoibIJgAPM2j1bz9490/tWe6UP1YPFwAxAAiApon8R1VlVnfU6
      M/u9zJfvZeXjb//ue/z2N36LheUSv/PmN+98Zxs9LAJEQyrbGyVyYxNDS9AXHFevXuXdd9/l
      0qVLd3w9k5OTgL+zxAcffMC1a9dYXV29E5TvcEuTUqlEqVTitddew/M85ufnOX36NJFIhFwu
      x9LSElevXuXmzZuk02mazSZnzpx5ZJnM/Rr1X8zgdHpYzTaeboAk49k2TquL3eoghwJoqQSB
      VAItnSR2boJAJomajKNGwse/EPPee+/xla9cY2ZmlitXXh3c9dhcvo2ujRNx9gmfmGB7fY0r
      r76M67pDR9gQnxr0nQp7//JjtFQcLZVACT24oYMQAhwb4dgIe3C4DrgOwnWOXwoxd+sGJ0Yy
      /Pz6vQIgM5Efp7gLLdNlPBGlrMrDpRBDHAnhuri9Pna9idNu47Q6OO0Obq+H0+ni9vp4fR23
      28PTdb8nB0793rdJvn60GqSkE2Tf+DXwXITjMzSOg/Bc8FxwXV81CkggBZHksB904B4cOwI0
      9tb50fs3ef31LzN5ZhA4zbNZXrzFZg2mp05QbrZR1RCXXzw3HAGeE7i6gVWtYdcbOM02drOF
      02xh1eo4zRZ2s4XX1/3OUJKQNQ0lGkHLpFHjMdRUAjWRQIlGUOMxlGgEJRZFjUZQolGUyMP3
      MH2gHP0evdnZI78XnjcQKB3PMPzUNPH6fTzDwNX14wXgL//sTzj3ylW214v80R/84aMLNBSA
      LxTseoN+aRO9tIWxsU1/vYTb6SFHQgRPjKBlM2ipJGoqiZZKomVS/nkmhfKMN7QC0FdXqXzv
      7+9jbO5lZ1lGDof9IxS6cyiRMHLIv3+sCjR9YYqFxdtcuvL6s67LEJ8xPNOiM79I+8YtOrML
      eIaJlk4RnpwgNH6a3Ne+Snhy4rF75+MgHBvhuuA4/rXtmyrFQGURnodwHNTcCHLwaEFSM2mi
      L798l7kjkY+9t+qRI8Cf/+l3qXd0vvH1rxNLj3Bx6tFhc4YjwC8P7mX49swswnaITb9I8ktX
      iF+5jBqL3pdfeB5uvYpd3sU5qODUDhCmMVAt+v653n+oOfL/Q9I0kGSkYSLQ1QAACnhJREFU
      wUa8kjaIWaAoSIoCkoSkqsR+46uELh29DMezbexa1achDXy6sowkweBjkB5WQgD3s/uRAtA4
      KPMf//kel6eniSazTE2MPbJiQwH4/MJutektFOncnqczu4BwXZ/hf/UK8Vem7/TswrIwVwtY
      WyXs8i723g7CNECSUFJptJNjqKNjqJkcciiMFAohhyNIwUH6efr/PdefGHu2PyF2bfAcMHtg
      9RFG92gVKD0yitdvsLCwwMj4uccSgCE+HxCeh765TXduic7MLHppCyUaIXb5ReJXLjP2+9++
      j+GN4gLGwm3M1QLCdQmeu0ggf5bY2Ytoo2PI0dhnXKOHQ5h9ROn6HWbG7IHRRZiDc0sHxwTh
      4Y8GgCSDFgItjBSMHD8HaHX6vPbSr5DIDpdBfN4gPA+n3cHcLWOW9zF2dv10awfPMAmOniDx
      pSuc+t03CU/lkWTZt4p02piFWYzFOczVAkgSoQsvEXrpFZLf/BZy6Ml1/OPL7YLVA6ePMDpg
      dRBGC6wuwmyD1QWzjTC7KNNvIo++ejSxfgPR3AMthBRJQ2oMglHkYAQCdw9Jln3Glx8cnY5U
      gSq7m8zOzWNYLtmxSX79tcsP5NFbVYpbZeKJDFMTY0MV6BNAeJ6/jkXXcXt93G7Pt5H3B9ed
      Lk63i9vt43S7WAdVvL4OsoyaiBM6PUZw9ATBsVECuQxKUAFLx6nu+7p6dR+3XkWYpm8ViScI
      TLxA+KVXCEydP3KSKTwXXAscY3CYCFsH1wRHR7i237t6g9S1EK7lP+PaYPf9/I5+P2FJQQpE
      QQtDMIEUiEMwjhRMDK6jEIxDIIakaE/evkL4uv+h/u8NUiFAeEcLwO7mGnsH/ptgR02C5+fn
      uDR9mYX5eS5PTz+XAuDqBm6v7zt4Ol2cdgen1fEZt90Z3POdP66uP0hAkpGDGko4jBKL+rbx
      RAIlEvJt4oe28lgEWZFRVAmv3cCpVQeT0X3cRt2ffKoqanYEdeQkaiaHmhtBScZQkzEQlt/z
      Wj2E1fUZdNDzYnUQVs/Xj4Xn95aSAkoASQuBGgIl6KsNanBwHQAl6DOpGgTZTyUlAIoGasTP
      r90dUcShHu7YCMdC9NuIdh3RayJ6Lbx2zb/XbYBtEbj2LdSLRzvC7PUlev/+j74VSQhw3YHg
      +o4wwcDvJd0zGZbuWQAtSU+2N2hxYY78xWmWF+e5fPnyZyoAh6YzYdsIx/EbwLIGJje/0T3L
      9BvLcxCWiXAdhGXc8SJ6pjX43sWzLYRpIzzffe52ezjdLl5fx+n0Bj12F8kbLAOWZZRYDDUZ
      R0vEUeJR1FjYd/wk4qipBHIgMGAwfCYY9EzCsZFkCWFbCKOPp/cQegev38Mz+gi9i9B7IIkB
      b8rI0TBqJoWaTqHEY+D5Pa+wTTD7CL2DMPoI1wMPcEG4AjwQLuCKO0yKEkIKxHwmvtug/gTy
      GDzM4HgkMwkPZJAUFdQAqAGkSAI5kUGKJJBiaaR4Gima8s9VFeTQXevOQ0m6eI29u1YkzS+/
      pGj3W3+Ogmc/mQB4jsFScZXc6Di5VAzXdbFtG0VR7qwPP+pcbf8Xbq9w/A8In6mPq8sh00t4
      d/+Re61fj9sYj8LjDseyen8vMyiQJD/v8Qjlh7TL8ZBS13ADU8DD+UgxdmDrh5+4RJKsPd3d
      oZ9HFWiIX248VQE4jOr3qOBmh3kf5bV7nCBpXxQaj0Pn06LxKHyR2uOpjsuSJKEoCpIkPXEj
      H9J7UjpDGkMax9IYBsgY4nnG098d2rNZLhSoNbsf+9HD906PghAupbUV+oaNbfTY2N4DwLF0
      un3f47exvophP94uFr3e45exWtmlUm0Ags3SGpbjYRt9VtZKuELQrO1TbbQfm94nRadZpbi8
      iu1+vADSnWqN49+OBb3bYm1jG4Fge2Mdw3ZxLJ2V1TUcT9Bt1ihXG4+g8jTg0ev1Hyunaxus
      rKxhu4Jeu8Hevs9Dld2tO/9Hs9k88nnlrbfeeuuJy3sv7CY1PYLb3MAMpKhsLNO3QXJ01ta3
      CIc1VlbWCEaTbK4uUa4c0KxXkYNxluZu0jU9MvEgS4VllGCUTm2Pcr1LJpWg1aiTGhllaWGe
      aq3GqXSA7YZHv71Fow7N2hYjp/Mszi8wdmr0kUVdLhYIKCpaJEK1sk+tusfebplIMsv2eoGu
      4ZKMxxC2TtdR2Ntcp9eukxodZ7VYRNNURnNxFpaWqbdt9OYB6ZOjKM8w2Pvm1hbnXsgzc2uW
      TCJEYXmdSCLN/vY6ja6J0Wmws98gItusbO5yUKlQbbSR+2026nU8R8Lut1jfKpOJByiub6ME
      woSDGo1Gi3TA5Kf/u8SZqSnWlotomsboyTQLiyvU6y3Qm2jpkwSfZSWxWS5uoCgSbr+L5doU
      VzfQTRvVNVhe3ySRzqLKEvV6ndHRHPMLRWr1OgG7i6WE0YJRNteXiYU1lpY3OXP64fzwzOID
      TJ6dYHdhho2qwXKhyPbePpcuXWR1aQlFUSgsLeEpAbSAxoUXz1HdK5M7OUZWMfjZzQVQFIqF
      JUqbe0xNjLJaWCaaSFGcu8Xp/FlUNUBiZBSjWWMin0cC0ukUmyW/oR4XzVodFzjY38ewPV48
      e5JScYGVnQ7FYpHyzgYtQ2C1KoQSWQxHkI5FUBSIR4LMzK1wfjyLFs+RCWl0jzedPxXIaoBo
      JMjCYgFVlVmav07bDJA/c4pCoUBrZ5mN3Ron8udRFRVZ8gCVsxcu0qxVWCoUQN9neW2bpqWh
      eTpbuxVCKixudxgZiZNLRFFVmWQsxK1bi5y7cBpNi3MyE6LxaVQSqNXqdGv7dLtN4icnsfpd
      FgsFVNlh9tYsq6UtUvEIt2bmOHv+BQJamNFcnJap0KpskMiOEk/lyCSiR/7GMxGAnc11ZmbX
      ODt9kVhQZiI/QUiVWFwqkszmcD1BPp9/4LnGQZnNap+pMyMI1yOfz5NOZ5AkhbMXz7N8+zpe
      IIJtGcjYzH40S/bMKVYLK2xtl1CCMWRJMDIy8sgy7m2X6FuCcFCmsFSkow+iY0qghpIkoyr5
      fJ7R03nicp/Z5T0kzyGXjHF7bh5Zi/Dh9Rsk4jF0KYpRWWGrY5J8cu/9sXBMnUKhgCNURrJZ
      PAH5qYuYnQqbO2Wy2SyJk+OkgvJg/ZffU0uKYL1QwJMDZLMZ5EiWM7ko6UyGWDLD+NhJrt/8
      iHgkSDoSYmZuDpQgH16/TiwRR9dlLKPC4laH0WdYSVvvMj83Tzx7gl67Tmmg5h46ebLZHIIA
      586f4+zkONc/vE4kEcfQbWyjxezqPmn2Wd7r4Dk2zWqFre0tdsoHD/294SR4iOcawxBJQzzX
      GArAEM81hgIwxHONoQB8QVErb1OutUDYLC6uHJHLoVKu4XQPKG4+bJIoeOdff8DWQZdWrcyN
      Gzdp9837clQq5ade9k8TT98PMMTnAj/557e5uV1mTG7zV//033z5yhTf//4PSJ2aZPHG+/zk
      p78gpJl894//monTWX74zvu0ehYXpsYpzN/ixz/7iJDY52/+4R1+8403WPmff+NAZPjR228z
      Pe3TiuVG+IvvfAczkMKqlfj57DqXzk1+1lX/WPg/SixbUFqxLH4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='138' name='Global_number' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Presentation' width='192'>
      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
      EKyypfkPoc1JfvsSVjgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Rates' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Vaccinated_Rates' width='192'>
      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
    </thumbnail>
    <thumbnail height='104' name='Vaccinated_overview' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Vaccination Summary' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='death_by_continent' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='death_map' width='192'>
      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
      ToeDhUCAf/Wv/zXj4+P84R/+IZMTE8zNzhKORBi/epV/8Rd/gbO9nZDLRV15OVldJ6tphFQV
      X1UVoWCQ87dvMxiLMTo/T/QBzbo/n5yk48ABKlZ7CGjFxdwMhdB0HdVq5c+efx7LqskyvrzM
      rWyWhiNHOPTUU+vOMzczgzQ9TSCbpePQITTDwNB1znz2GSZQXFy8LYWxGgwD+yNcVzjB28Di
      4iL/9B/+AzUWCykg5fFga2igvr6e/d3dnPnoI5qdTi5dusTE5CQHDx6kq6uLz9NpiktKaO7q
      wl9aSjKR4D/9x/+Ilkxy5MABuvfuJbu4SCyZxJBlpOJi/svrr/Pq0aNU+P2c6+8nbJo4dJ3q
      1ta8WSJJEh1795JOp7l++TIWVsqKeGw2FlIpXFVVdHR2rhvIucKzdyYmKPF4aOntJRwOMx8I
      YFEUOru6KC0t3Zbv1zAMLI9QUHgplRIC2A4uXrxI10sv8c7Pf87ejg66ZBm5tZXunh4yCwu8
      8vLLjHzyCVcHBnjllVf4zW9+w+jICDWqSt/PfkZiZoaK6mrSLhe16TStr77KpUuXSJ47xwsv
      vMDIyAhVVVUMDQ5y4MABDK+X//PRR5R4PGRkmcqGBvb29NxzXzabjf1HjwIrDTNisRj77kq6
      yxXQtVgs2Gw2vv3yy3nndm5uDqvVypEnn9zWAguSJGF8yfWHw2FuPP+8MIE2C13XGRsbI5FI
      3PN/hw4d4sJrr/GvysrYPzOD0tlJfX39yj5iwyAYCpH2+2k9coTr/f24HQ7q6up4pryc3YrC
      tViMc/39DF6/zjONjfS/9x6l2SxNjY04nU4UTWN5fp7Ori6aWlpYDIVobW/nsytX2L17Nye+
      9a0HLnikUikmJiawWq0U3zX4o9Eoo6OjhMNhamtrGRwczLd9jcfjfH71Kj6fb1tqAa1FkiTY
      u5flhwTbat1uLKdPi7Iom4Usy/h8vvuWCLfZbBTX1TERDpPt6sJRUUEsGuWTTz7B5fFw8eJF
      FhYWaNm1i1dffXXFaTUMIjYbQUVhbHiYxZISSvbs4czYGO1NTTy9ezdEo9y+fp0qTaMoleL2
      9DS3RkaYmZnh8KFDWFc7VUqyfN9VGdM0efPNNwkGgywtLVF3V7tUm82WT1vOZrNMTk4SCAQw
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='forcast' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='vaccinated_map' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
